{"version":3,"file":"static/js/490.063b6aa4.chunk.js","mappings":"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","sources":["components/order/OrderSummary.jsx","components/order/ShippingInfo.jsx","components/order/DefaultShippingAddress.jsx","components/order/CheckoutForm.jsx","components/order/StripePayment.js","components/order/OrderDetails.jsx","components/order/Order.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAllOrders, totalPayAmount } from \"../../features/order/orderSlice\";\r\n\r\nconst OrderSummary = () => {\r\n  const [subtotal, setSubTotal] = useState(0);\r\n  const [shipping, setShipping] = useState(0);\r\n  const [total, setTotal] = useState(0)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderdItems = useSelector(getAllOrders);\r\n  console.log(orderdItems);\r\n\r\n\r\n  useEffect(() => {\r\n    const calcSubtotal = orderdItems && orderdItems.reduce( (acc, item) => {\r\n      return acc + item.product.price * item.quantity\r\n    }, 0)\r\n\r\n      \r\n      \r\n      setSubTotal(calcSubtotal);\r\n    setShipping(50);\r\n  setTotal(calcSubtotal + shipping);\r\n  dispatch(totalPayAmount({amount: calcSubtotal + shipping}));\r\n\r\n}, [orderdItems, shipping, dispatch])\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"content\">\r\n        <h2>Order Summary</h2>\r\n\r\n        <dl className=\"sub_total\">\r\n          <dt>Product price</dt>\r\n          <dd>USD ${subtotal}</dd>\r\n        </dl>\r\n\r\n        <dl className=\"shipping\">\r\n          <dt>Shipping cost</dt>\r\n          <dd>USD ${shipping}</dd>\r\n        </dl>\r\n        <div className=\"hr\"></div>\r\n\r\n        <dl className=\"total\">\r\n          <dt>Total</dt>\r\n          <dd>USD ${total}</dd>\r\n        </dl>\r\n     \r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrderSummary;\r\n\r\nconst Container = styled.div`\r\n  width: 25%;\r\n  max-width: 35rem;\r\n  .content {\r\n    background: #fff;\r\n    padding: 1rem 2rem;\r\n    margin: 1rem 0 1rem 1rem;\r\n    border-radius: 0.5rem;\r\n\r\n    @media screen and (max-width: 768px) {\r\n  margin: 0;\r\n}\r\n\r\n    h2 {\r\n      font-size: 2.5rem;\r\n      font-weight: 600;\r\n      margin-bottom: 2.4rem;\r\n    }\r\n    dd,\r\n    dt {\r\n      font-size: 1.4rem;\r\n      color: #000;\r\n      font-weight: 400;\r\n    }\r\n    .sub_total {\r\n      display: flex;\r\n      justify-content: space-between;\r\n    }\r\n    .shipping {\r\n      display: flex;\r\n      justify-content: space-between;\r\n    }\r\n    .total {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      dd,\r\n      dt {\r\n        font-size: 1.4rem;\r\n        color: #000;\r\n        font-weight: 600;\r\n      }\r\n      dd {\r\n        font-size: 2rem;\r\n      }\r\n    }\r\n    .hr {\r\n      border: 1px solid #f2f2f2;\r\n      margin: 2rem 0;\r\n    }\r\n    .buy_now {\r\n      width: 100%;\r\n      border: none;\r\n      background: tomato;\r\n      padding: 1rem 0;\r\n      border-radius: 0.5rem;\r\n      font-size: 1.6rem;\r\n      color: #fff;\r\n      cursor: pointer;\r\n      margin: 2rem 0 1rem;\r\n    }\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n  width: 100%;\r\n  padding-right: .5rem;\r\n}\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport LocalPhoneIcon from \"@mui/icons-material/LocalPhone\";\r\nimport AddLocationAltIcon from \"@mui/icons-material/AddLocationAlt\";\r\nimport PublicIcon from \"@mui/icons-material/Public\";\r\nimport TransferWithinAStationIcon from \"@mui/icons-material/TransferWithinAStation\";\r\nimport LocationCityIcon from \"@mui/icons-material/LocationCity\";\r\nimport { shippingInformation } from \"../../features/order/orderSlice\";\r\n\r\n\r\nconst ShippingInfo = ({ setIsShipping}) => {\r\n  const [countryCode, setCountryCode] = useState(\"\");\r\n  const [stateCode, setStateCode] = useState(\"\");\r\n  const [shippingMsg, setShippingMsg] = useState(\"\");\r\n  const [shippingData, setShippingData] = useState({\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    country: \"\",\r\n    postCode: \"\",\r\n    phoneNo: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n \r\n\r\n  useEffect(() => {\r\n \r\n      setShippingData((prev) => {\r\n        return { ...prev, state: \"\", city: \"\" };\r\n      });\r\n      setStateCode(\"\");\r\n   \r\n\r\n\r\n  }, [shippingData.country]);\r\n\r\n  const shippingDataHandler = (e) => {\r\n    e.preventDefault();\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setShippingData((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n  };\r\n\r\n  const countryHandler = (e) => {\r\n    const value = e.target.value;\r\n    setCountryCode(value);\r\n    const country = Country.getCountryByCode(value);\r\n    console.log(country)\r\n    setShippingData((prev) => {\r\n      return { ...prev, country: country.name };\r\n    });\r\n  };\r\n\r\n  const stateHandler = (e) => {\r\n    const value = e.target.value;\r\n    setStateCode(value);\r\n\r\n    const state = State.getStateByCodeAndCountry(value, countryCode);\r\n      setShippingData((prev) => {\r\n      return { ...prev, state: state.name };\r\n    });\r\n  };\r\n\r\n  const saveShippingInfo = () => {\r\n    if(shippingData.address !== '' && shippingData.city !== \"\" && shippingData.state !== \"\" && shippingData.country !== \"\" && shippingData.postCode !== \"\" && shippingData.phoneNo !== \"\"){\r\n      setShippingMsg(\"Shipping information saved.\");\r\n       localStorage.setItem(\"shippingInfo\", JSON.stringify(shippingData));\r\n        dispatch(shippingInformation({shippingInfo: shippingData}))\r\n    }else{\r\n      setShippingMsg(\"Please filled all of this details\")\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <ShippingContainer>\r\n      <MainContainer>\r\n        <Title>\r\n          <h2>Update address</h2>\r\n          <i className=\"bi bi-x-lg\" onClick={() => setIsShipping(false)}></i>\r\n        </Title>\r\n        <Form>\r\n          <div className=\"input_group\">\r\n            <HomeIcon fontSize=\"large\" />\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"address\"\r\n              value={shippingData.address}\r\n              onChange={shippingDataHandler}\r\n              placeholder=\"Address\"\r\n            />\r\n          </div>\r\n          <div className=\"input_group\">\r\n            <LocalPhoneIcon fontSize=\"large\" />\r\n            <input\r\n              type=\"number\"\r\n              required\r\n              name=\"phoneNo\"\r\n              value={shippingData.phoneNo}\r\n              onChange={shippingDataHandler}\r\n              placeholder=\"Phone Number\"\r\n           \r\n            />\r\n          </div>\r\n          <div className=\"input_group\">\r\n            <AddLocationAltIcon fontSize=\"large\" />\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"postCode\"\r\n              value={shippingData.postCode}\r\n              onChange={shippingDataHandler}\r\n              placeholder=\"Zip Code\"\r\n            />\r\n          </div>\r\n          <div className=\"input_group\">\r\n            <PublicIcon fontSize=\"large\" />\r\n            <select required name=\"country\" onChange={countryHandler}>\r\n              <option value=\"\">Country</option>\r\n              {Country &&\r\n                Country.getAllCountries().map((country) => (\r\n                  <option key={country.isoCode} value={country.isoCode}>\r\n                    {country.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          {countryCode && (\r\n            <div className=\"input_group\">\r\n              <TransferWithinAStationIcon fontSize=\"large\" />\r\n              <select required name=\"state\" onChange={stateHandler}>\r\n                <option value=\"\">State</option>\r\n                {State &&\r\n                  State.getStatesOfCountry(countryCode).map((state) => (\r\n                    <option key={state.isoCode} value={state.isoCode}>\r\n                      {state.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n          {stateCode && (\r\n            <div className=\"input_group\">\r\n              <LocationCityIcon fontSize=\"large\" />\r\n              <select\r\n                required\r\n                name=\"city\"\r\n                value={shippingData.city}\r\n                onChange={shippingDataHandler}\r\n              >\r\n                <option value=\"\">City</option>\r\n                {City &&\r\n                  City.getCitiesOfState(countryCode, stateCode).map((city) => (\r\n                    <option key={city.name} value={city.name}>\r\n                      {city.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n          {\r\n            shippingMsg && <div>\r\n              <p>{shippingMsg}</p>\r\n            </div>\r\n          }\r\n          <div className=\"input_button\" onClick={saveShippingInfo}>\r\n            <input type=\"button\" value=\"Save & Continue\" />\r\n          </div>\r\n        </Form>\r\n      </MainContainer>\r\n    </ShippingContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingInfo;\r\n\r\nconst ShippingContainer = styled.div`\r\n  /* position: absolute; */\r\n  /* background: #f2f2f2; */\r\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n  /* width: 1000rem;\r\nheight: auto; */\r\n  padding: 2rem;\r\n  z-index: 100;\r\n`;\r\nconst MainContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\nconst Title = styled.div`\r\n  display: flex;\r\n  i {\r\n    position: absolute;\r\n    right: 0;\r\n    top: -1.5rem;\r\n    font-size: 2rem;\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n    &:hover {\r\n      color: red;\r\n    }\r\n  }\r\n`;\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .input_group {\r\n    width: 100%;\r\n    max-width: 40rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 1px solid #f2f2f2;\r\n    margin: 0.5rem 0;\r\n    padding-left: 0.5rem;\r\n\r\n    input,\r\n    select {\r\n      width: 100%;\r\n      max-width: 40rem;\r\n      padding: 1rem;\r\n      margin: 0.5rem;\r\n      font-size: 1.3rem;\r\n      border: none;\r\n\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .input_button {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n\r\n    input {\r\n      width: 100%;\r\n      max-width: 40rem;\r\n      padding: 1rem;\r\n      margin: 0.5rem;\r\n      font-size: 1.3rem;\r\n      border: none;\r\n      transition: all 0.5s;\r\n\r\n      &:hover {\r\n        color: tomato;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst DefaultShippingAddress = () => {\r\n\r\n    const shippingInfo = JSON.parse(localStorage.getItem(\"shippingInfo\"));\r\n    // console.log(shippingInfo);\r\n  return (\r\n      <>\r\n      {\r\n          shippingInfo &&     <DefaultShippingContainer>\r\n          <Title>Default Shipping Address</Title>\r\n         \r\n            <MainContent>\r\n          <p>Address: <span>{shippingInfo.address}</span></p>\r\n          <p>Phone Number: <span>{shippingInfo.phoneNo}</span></p>\r\n          <p>Zip Code: <span>{shippingInfo.postCode}</span></p>\r\n          <p>Country: <span>{shippingInfo.country}</span></p>\r\n          <p>State: <span>{shippingInfo.state}</span></p>\r\n          <p>City: <span>{shippingInfo.city}</span></p>\r\n          </MainContent>\r\n  \r\n      </DefaultShippingContainer>\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DefaultShippingAddress;\r\n\r\nconst DefaultShippingContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    `\r\nconst Title = styled.h4`\r\n    margin-bottom: 1rem;\r\n`\r\n    const MainContent = styled.div`\r\n        p{\r\n            color: #000!important;\r\n            span{\r\n                color: #666;\r\n            }\r\n        }\r\n    `","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n  PaymentElement,\r\n  useStripe,\r\n  useElements\r\n} from \"@stripe/react-stripe-js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getAllOrders, getShippingInformation } from \"../../features/order/orderSlice\";\r\n\r\nexport default function CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n  const shippingInfo = useSelector(getShippingInformation);\r\n  const orderdItem = useSelector(getAllOrders);\r\n\r\n  const createNewOrder = () => {\r\n    const newOrder = {\r\n      shippingInfo,\r\n      orderItems: [\r\n        {\r\n          productId: orderdItem.p\r\n        }\r\n      ]\r\n    }\r\n\r\n  }\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    if (!stripe) {\r\n      return;\r\n    }\r\n\r\n    const clientSecret = new URLSearchParams(window.location.search).get(\r\n      \"payment_intent_client_secret\"\r\n    );\r\n\r\n    if (!clientSecret) {\r\n      return;\r\n    }\r\n\r\n    stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\r\n      switch (paymentIntent.status) {\r\n        case \"succeeded\":\r\n          setMessage(\"Payment succeeded!\");\r\n         alert(\"payment complete \");\r\n    \r\n          break;\r\n        case \"processing\":\r\n          setMessage(\"Your payment is processing.\");\r\n          break;\r\n        case \"requires_payment_method\":\r\n          setMessage(\"Your payment was not successful, please try again.\");\r\n          break;\r\n        default: \r\n          setMessage(\"Something went wrong.\");\r\n          break; \r\n      }\r\n    });\r\n  }, [stripe]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const { error } = await stripe.confirmPayment({\r\n      elements,\r\n      confirmParams: {\r\n        // Make sure to change this to your payment completion page\r\n   \r\n        return_url: \"http://localhost:3000/order/sucess\",\r\n      },\r\n\r\n    });\r\n\r\n    // This point will only be reached if there is an immediate error when\r\n    // confirming the payment. Otherwise, your customer will be redirected to\r\n    // your `return_url`. For some payment methods like iDEAL, your customer will\r\n    // be redirected to an intermediate site first to authorize the payment, then\r\n    // redirected to the `return_url`.\r\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n      setMessage(error.message);\r\n    } else {\r\n      setMessage(\"An unexpected error occured.\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <CheckoutFormContainer>\r\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n      <PaymentElement id=\"payment-element\" />\r\n      <button disabled={isLoading || !stripe || !elements} id=\"submit\">\r\n        <span id=\"button-text\">\r\n          {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay Now\"}\r\n        </span>\r\n      </button>\r\n      {/* Show any error or success messages */}\r\n      {message && <div id=\"payment-message\">{message}</div>}\r\n    </form>\r\n    </CheckoutFormContainer>\r\n  );\r\n}\r\n\r\n\r\nconst CheckoutFormContainer = styled.div`\r\n  form {\r\n    width: 30vw;\r\n    min-width: 500px;\r\n    align-self: center;\r\n    box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\r\n      0px 2px 5px 0px rgba(50, 50, 93, 0.1), 0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\r\n    border-radius: 7px;\r\n    padding: 40px;\r\n\r\n    #payment-element {\r\n    margin-bottom: 24px;\r\n  }\r\n  button {\r\n    background: #5469d4;\r\n    font-family: Arial, sans-serif;\r\n    color: #ffffff;\r\n    border-radius: 4px;\r\n    border: 0;\r\n    padding: 12px 16px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    display: block;\r\n    transition: all 0.2s ease;\r\n    box-shadow: 0px 4px 5.5px 0px rgba(0, 0, 0, 0.07);\r\n    width: 100%;\r\n\r\n    &:hover {\r\n    filter: contrast(115%);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: default;\r\n  }\r\n\r\n  .spinner,\r\n  .spinner:before,\r\n  .spinner:after {\r\n    border-radius: 50%;\r\n  }\r\n  \r\n  .spinner {\r\n    color: #ffffff;\r\n    font-size: 22px;\r\n    text-indent: -99999px;\r\n    margin: 0px auto;\r\n    position: relative;\r\n    width: 20px;\r\n    height: 20px;\r\n    box-shadow: inset 0 0 0 2px;\r\n    -webkit-transform: translateZ(0);\r\n    -ms-transform: translateZ(0);\r\n    transform: translateZ(0);\r\n  }\r\n  \r\n  .spinner:before,\r\n  .spinner:after {\r\n    position: absolute;\r\n    content: '';\r\n  }\r\n  \r\n  .spinner:before {\r\n    width: 10.4px;\r\n    height: 20.4px;\r\n    background: #5469d4;\r\n    border-radius: 20.4px 0 0 20.4px;\r\n    top: -0.2px;\r\n    left: -0.2px;\r\n    -webkit-transform-origin: 10.4px 10.2px;\r\n    transform-origin: 10.4px 10.2px;\r\n    -webkit-animation: loading 2s infinite ease 1.5s;\r\n    animation: loading 2s infinite ease 1.5s;\r\n  }\r\n  \r\n  .spinner:after {\r\n    width: 10.4px;\r\n    height: 10.2px;\r\n    background: #5469d4;\r\n    border-radius: 0 10.2px 10.2px 0;\r\n    top: -0.1px;\r\n    left: 10.2px;\r\n    -webkit-transform-origin: 0px 10.2px;\r\n    transform-origin: 0px 10.2px;\r\n    -webkit-animation: loading 2s infinite ease;\r\n    animation: loading 2s infinite ease;\r\n  }\r\n  \r\n  @keyframes loading {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  \r\n  }\r\n\r\n  #payment-message {\r\n    color: rgb(105, 115, 134);\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    padding-top: 12px;\r\n    text-align: center;\r\n  }\r\n  \r\n\r\n  }\r\n\r\n   \r\n  @media only screen and (max-width: 600px) {\r\n    form {\r\n      width: 80vw;\r\n      min-width: initial;\r\n    }\r\n  }\r\n  \r\n`","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\n\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getTotalPayAmount } from \"../../features/order/orderSlice\";\r\n\r\n// Make sure to call loadStripe outside of a component’s render to avoid\r\n// recreating the Stripe object on every render.\r\n// This is your test publishable API key.\r\nconst stripePromise = loadStripe(\"pk_test_51KWHPxKtPRz3pfcC3mSsCK1Egl93IBQL9dTfz1p20NXtwQvy9uwUMSlIjslmqNGEGqjBRfgdkz5RKtkcvNDabU3o0008jrd6ig\");\r\n\r\nconst StripePayment = () => {\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n\r\n  const totalAmount = useSelector(getTotalPayAmount);\r\n  // console.log(totalAmount);\r\n\r\n  useEffect(() => {\r\n    // Create PaymentIntent as soon as the page loads\r\n    fetch(\"/api/v1/create-payment-intent\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ amount: totalAmount * 100}),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setClientSecret(data.client_secret));\r\n  }, [totalAmount]);\r\n  // console.log(clientSecret);\r\n\r\n  const appearance = {\r\n    theme: 'stripe',\r\n  };\r\n  const options = {\r\n    clientSecret,\r\n    appearance,\r\n  };\r\n\r\n  return (\r\n    <StripeContainer>\r\n \r\n       {\r\n         clientSecret &&  <Elements options={options} stripe={stripePromise}>\r\n         <CheckoutForm />\r\n       </Elements>\r\n       }\r\n   \r\n    </StripeContainer>\r\n  );\r\n}\r\n\r\nexport default StripePayment;\r\n\r\nconst StripeContainer = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n`","import React, {useState, useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useNavigate} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCartItem } from \"../../features/products/productSlice\";\r\nimport { addOrderItem, getAllOrders, getShippingInformation, removeOrderItem, shippingInformation } from \"../../features/order/orderSlice\";\r\nimport ShippingInfo from \"./ShippingInfo\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport DefaultShippingAddress from \"./DefaultShippingAddress\";\r\nimport StripePayment from \"./StripePayment\";\r\n\r\n\r\nconst OrderDetails = () => {\r\n  const [isShipping, setIsShipping] = useState(false);\r\n  const [isPayment, setIsPayment] = useState(false);\r\n \r\nconst navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n  const shippingInf = JSON.parse(localStorage.getItem(\"shippingInfo\"));\r\n  dispatch(shippingInformation({shippingInfo: shippingInf}))\r\n\r\n},[dispatch]);\r\n\r\nconst {authenticated} = useSelector((state) => state.auth)\r\n\r\n\r\n  const orderdItem = useSelector(getAllOrders);\r\n  const shippingInfo = useSelector(getShippingInformation);\r\n  // console.log(orderdItem);\r\n\r\n  const productDecrement = (item) => {\r\n          dispatch(addCartItem({product: item.product, quantity: item.quantity-1}));\r\n\r\n          orderdItem && orderdItem.map((check) => {\r\n          if ( check.product._id === item.product._id) {\r\n\r\n            let Item = {product: item.product, quantity: item.quantity-1}\r\n            dispatch(addOrderItem({Item}))\r\n          }\r\n          return null;\r\n          })\r\n  }\r\n\r\n  const productIncrement = (item) => {\r\n    dispatch(addCartItem({product: item.product, quantity: item.quantity+1}));\r\n    \r\n    orderdItem && orderdItem.map((check) => {\r\n      if ( check.product._id === item.product._id) {\r\n\r\n        let Item = {product: item.product, quantity: item.quantity+1}\r\n        dispatch(addOrderItem({Item}))\r\n      }\r\n      return null;\r\n      })\r\n  }\r\nconst deleteProduct = (Item) => {\r\n  dispatch(removeOrderItem({Item}))\r\n}\r\n \r\nconst paymentHandler = () => {\r\n\r\n  if(!authenticated) {\r\n    navigate(\"/login\")\r\n  }else{\r\n        shippingInfo && orderdItem.length !== 0 &&   setIsPayment(true)\r\n  }\r\n\r\n}\r\n\r\n  return (\r\n    <Container>\r\n        <Wraper>\r\n            <ShippingContainer>\r\n                <h4>Shipping Information</h4>\r\n                <p onClick={() => setIsShipping(!isShipping)}>+ Add new address</p>\r\n\r\n                {\r\n                    isShipping ? <ShippingInfo setIsShipping={setIsShipping} /> : <DefaultShippingAddress/ >\r\n                }\r\n\r\n            </ShippingContainer>\r\n        </Wraper>\r\n\r\n\r\n        <Wraper>\r\n            <PaymentContainer>\r\n            <h4>Choose a Payment Methods</h4>\r\n            <img style={isPayment ? {border: \"2px solid red\"} : {}} src=\"./images/payment/stripe.png\" alt=\"Stripe\" onClick={paymentHandler} />\r\n            </PaymentContainer>\r\n            {isPayment && authenticated===true && <StripePayment />}\r\n        </Wraper>\r\n\r\n\r\n\r\n      <Wraper>\r\n        <CartTitle>\r\n          <h2>Order Review({orderdItem.length})</h2>\r\n        </CartTitle>\r\n        \r\n{\r\n  orderdItem && orderdItem.map((Item) => {\r\n\r\n   return(\r\n    \r\n    <CartProducts  key={Item.product._id}>\r\n      <div className=\"left_box\">\r\n   \r\n      <div className=\"img_box\">\r\n        <img\r\n          src={Item.product.images[0].url}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"dtails_box\">\r\n        <div className=\"title\">\r\n          <Link to={`/products/${Item.product._id}`}>\r\n         {Item.product.name}\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"price\">\r\n          <span>BDT ৳{Item.product.price}</span>\r\n        </div>\r\n        <div className=\"shiping\">\r\n          <span>Shipping: BDT ৳5.55</span>\r\n        </div>\r\n      </div>\r\n      </div>\r\n\r\n      <div className=\"cart_controller\">\r\n         \r\n        <div className=\"quantity\">\r\n          <div className=\"set_quantity\">\r\n            <button>\r\n              <i\r\n                className=\"bi bi-dash\"\r\n                onClick={() => Item.quantity>1 &&  productDecrement(Item)}\r\n              ></i>\r\n            </button>\r\n            <p>{Item.quantity}</p>\r\n            <button>\r\n              <i\r\n                className=\"bi bi-plus\"\r\n                onClick={() =>Item.quantity<10 && productIncrement(Item)}\r\n              ></i>\r\n            </button>\r\n      \r\n          </div>\r\n        </div>\r\n        <div className=\"notify\">\r\n        {Item.quantity === 10 && <span>Maximum 10 Products</span>}\r\n        </div>\r\n\r\n        <div className=\"subtotal\">\r\n        <p>৳ {Item.product.price * Item.quantity} </p>\r\n        </div>\r\n\r\n        <div className=\"remove_order_item\">\r\n        <IconButton onClick={() => deleteProduct(Item)} aria-label=\"delete\" size=\"large\" color=\"error\"> \r\n            <DeleteForeverIcon fontSize=\"large\" />\r\n          </IconButton>\r\n        </div>\r\n\r\n      </div>\r\n    </CartProducts>\r\n\r\n   )\r\n  }) \r\n}\r\n\r\n{\r\n  orderdItem.length === 0 && <EmptyProductContainer>\r\n  <p>No products in your order List.</p>\r\n    <Link to={\"/cart\"}> Add Items </Link>\r\n</EmptyProductContainer>\r\n}\r\n   \r\n      </Wraper>\r\n\r\n \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n\r\nconst Container = styled.div`\r\n  width: 75%;\r\n  @media screen and (max-width: 768px) {\r\n  width: 100%;\r\n  margin: auto;\r\n}\r\n`;\r\n\r\nconst Wraper = styled.div`\r\n  background: #fff;\r\n  padding: 1rem 2rem;\r\n  margin: 1rem 1rem 1rem 0;\r\n  border-radius: 0.5rem;\r\n\r\n`;\r\n\r\nconst ShippingContainer = styled.div`\r\n    h4{\r\nfont-size: 1.8rem;;\r\nfont-weight: 600;\r\n    }\r\n    p{\r\nfont-size: 1.4rem;\r\ncolor: tomato;\r\ncursor: pointer;\r\nuser-select: none;\r\n    }\r\n`\r\nconst PaymentContainer = styled.div`\r\nmargin-bottom: 2rem;\r\n        h4{\r\nfont-size: 1.8rem;;\r\nfont-weight: 600;\r\n    }\r\n    img{\r\nwidth: 20rem;\r\ncursor: pointer;\r\nuser-select: none;\r\nborder-radius: 5px;\r\n    }\r\n`\r\n\r\nconst CartTitle = styled.div`\r\n\r\nh2 {\r\n    font-size: 1.8rem;\r\n    font-weight: 600;\r\n  }\r\n`;\r\nconst CartProducts = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 1rem 0;\r\n  border-bottom: 1px solid #f2f2f2;\r\n\r\n  .left_box {\r\n    display: flex;\r\n  .img_box {\r\n    padding: 0 1rem;\r\n    img {\r\n      width: 12rem;\r\n      height: 12rem;\r\n    }\r\n  }\r\n  .dtails_box {\r\n    .title {\r\n      a {\r\n        font-size: 1.4rem;\r\n      }\r\n    }\r\n    .price {\r\n        margin: 1rem 0;\r\n        span{\r\n            font-weight: 600;\r\n            font-size: 1.6rem;\r\n        }\r\n    }\r\n    .shiping {\r\n        span{\r\n            margin-right: 5px;\r\n    color: #2e9cc3;\r\n    font-weight: 500;\r\n    line-height: 18px;\r\n    font-size: 12px;\r\n        }\r\n    }\r\n  }\r\n}\r\n  .cart_controller {\r\n    /* background: red; */\r\n    width: 12rem;\r\n\r\n    .remove_order_item{\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n\r\n    .quantity {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      margin: 0 1rem;\r\n      p {\r\n        font-family: \"Roboto\", \"san-serif\";\r\n        color: #757575;\r\n        word-wrap: break-word;\r\n        font-size: 1.4rem;\r\n        font-weight: 400;\r\n      }\r\n      .set_quantity {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        button {\r\n          width: 2.5rem;\r\n          height: 2.5rem;\r\n          border-radius: 50%;\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          border: none;\r\n          cursor: pointer;\r\n          i {\r\n            font-size: 2rem;\r\n            color: #757575;\r\n          }\r\n        }\r\n        p {\r\n          padding: 0 1rem;\r\n          margin-bottom: 0;\r\n          color: #666;\r\n        }\r\n      }\r\n    }\r\n    .notify{\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-top: 1rem;\r\n        span{\r\n            text-align: center;\r\n        }\r\n    }\r\n    .subtotal{\r\n        text-align: center;\r\n        p{\r\n            font-size: 1rem;\r\n            font-weight: 400;\r\n            color: #2e9cc3;\r\n        }\r\n    }\r\n  }\r\n`;\r\n\r\nconst EmptyProductContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-items: center;\r\np{\r\n  font-size: 1.6rem;\r\n}\r\na{\r\n  font-size: 1.4rem;\r\n  background-color: #fff;\r\n  color: tomato;\r\n  border: 1px solid tomato;\r\n  border-radius: 2rem;\r\n  padding: .5rem 1rem;\r\n  transition: all .5s;\r\n\r\n  &:hover{\r\n    color: #000;\r\n  \r\n  }\r\n}\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport PageContainer from \"../utils/PageContainer\";\r\nimport OrderSummary from './OrderSummary';\r\nimport OrderDetails from './OrderDetails';\r\n\r\n\r\n\r\n\r\nconst Cart = () => {\r\n\r\n\r\n\r\n  return (\r\n    <PageContainer>\r\n\r\n   <OrderContainer>\r\n  <OrderDetails/>\r\n  <OrderSummary />\r\n  </OrderContainer>\r\n  \r\n    </PageContainer>\r\n  )\r\n};\r\n\r\nexport default Cart;\r\n\r\n\r\n\r\nconst OrderContainer = styled.div`\r\nwidth: 100%;\r\nmax-width: 1440px;\r\nbackground: transparent;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nmargin: 1rem 0;\r\n/* position: relative; */\r\n\r\n@media screen and (max-width: 1440px) {\r\n  padding: 0 1rem;\r\n}\r\n@media screen and (max-width: 768px) {\r\n  flex-direction: column;\r\n}\r\n`\r\n"],"names":["useState","subtotal","setSubTotal","shipping","setShipping","total","setTotal","dispatch","useDispatch","orderdItems","useSelector","getAllOrders","console","log","useEffect","calcSubtotal","reduce","acc","item","product","price","quantity","totalPayAmount","amount","Container","className","styled","setIsShipping","countryCode","setCountryCode","stateCode","setStateCode","shippingMsg","setShippingMsg","address","city","state","country","postCode","phoneNo","shippingData","setShippingData","prev","shippingDataHandler","e","preventDefault","name","target","value","ShippingContainer","MainContainer","Title","onClick","Form","Home","fontSize","type","required","onChange","placeholder","LocalPhone","AddLocationAlt","Public","Country","map","isoCode","TransferWithinAStation","State","LocationCity","City","localStorage","setItem","JSON","stringify","shippingInformation","shippingInfo","parse","getItem","DefaultShippingContainer","MainContent","CheckoutForm","stripe","useStripe","elements","useElements","message","setMessage","isLoading","setIsLoading","getShippingInformation","clientSecret","URLSearchParams","window","location","search","get","retrievePaymentIntent","then","paymentIntent","status","alert","handleSubmit","confirmPayment","confirmParams","return_url","error","CheckoutFormContainer","id","onSubmit","PaymentElement","disabled","stripePromise","loadStripe","setClientSecret","totalAmount","getTotalPayAmount","fetch","method","headers","body","res","json","data","client_secret","options","appearance","theme","StripeContainer","Elements","isShipping","isPayment","setIsPayment","navigate","useNavigate","shippingInf","authenticated","auth","orderdItem","Wraper","PaymentContainer","style","border","src","alt","length","CartTitle","Item","CartProducts","images","url","to","_id","addCartItem","check","addOrderItem","IconButton","removeOrderItem","deleteProduct","size","color","DeleteForever","EmptyProductContainer","PageContainer","OrderContainer"],"sourceRoot":""}