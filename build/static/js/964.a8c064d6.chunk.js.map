{"version":3,"file":"static/js/964.a8c064d6.chunk.js","mappings":"oIASIA,EAAMC,E,2JA0HV,UAzHiB,WACf,OAAwBC,EAAAA,EAAAA,UAAS,CAC/BF,KAAM,GACNG,MAAO,GACPC,SAAU,GACVC,UAAW,KAJb,eAAOC,EAAP,KAAaC,EAAb,KAOMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAe,SAACC,GACpBX,EAAOW,EAAEC,OAAOZ,KACjBC,EAAQU,EAAEC,OAAOX,MACjBM,GAAQ,kBAAID,GAAL,cAAYN,EAAOC,MAGrBY,EAAa,mCAAG,WAAMF,GAAN,6EACpBA,EAAEG,iBAECd,EAAoCM,EAApCN,KAAMG,EAA8BG,EAA9BH,MAAOC,EAAuBE,EAAvBF,SAAUC,EAAaC,EAAbD,UAC1BL,GAASG,GAAUC,GAAaC,EAG5BD,IAAaC,GACnBU,EAAAA,EAAAA,IAAM,2BAENC,IAAAA,KAAW,mBACT,CAAChB,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,IAAWa,MAAK,SAACC,GAC7BC,QAAQC,IAAIF,GACM,MAAfA,EAAIG,SACLN,EAAAA,EAAAA,IAAM,2BAENO,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUP,EAAIZ,KAAKoB,QAE9DC,YAAW,WACTnB,EAAS,OACN,MACe,MAAbU,EAAIG,UACXN,EAAAA,EAAAA,IAAMG,EAAIZ,KAAKsB,SACfD,YAAW,WACTnB,EAAS,YACN,SAGNqB,OAAM,SAACC,GAIRX,QAAQC,IAAIU,EAAIF,aA3BpBb,EAAAA,EAAAA,IAAM,0BALgB,2CAAH,sDAiDnB,OACE,iCACC,SAAC,KAAD,KACC,UAACgB,EAAD,YACE,UAACC,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,+BACA,UAACC,EAAD,CAAMC,SAAUvB,EAAhB,WACE,UAACwB,EAAD,YACE,4BACE,kBAAOC,QAAQ,OAAf,8BACA,kBAAOC,KAAK,OAAOvC,KAAK,OAAOwC,UAAQ,EAACC,IAAK,EAAGC,SAAUhC,EAAcT,MAAOK,EAAKN,WAEtF,4BACE,kBAAOsC,QAAQ,QAAf,+BACA,kBAAOC,KAAK,QAAQvC,KAAK,QAAQwC,UAAQ,EAACE,SAAUhC,EAAcT,MAAOK,EAAKH,YAEhF,4BACE,kBAAOmC,QAAQ,WAAf,uBACA,kBAAOC,KAAK,WAAWvC,KAAK,WAAWwC,UAAQ,EAACC,IAAK,EAAGC,SAAUhC,EAAcT,MAAOK,EAAKF,SAAUuC,YAAY,2BAClH,0BAAG,gCAAH,mDAEF,4BACE,kBAAOL,QAAQ,WAAf,+BACA,kBAAOC,KAAK,WAAWvC,KAAK,YAAYwC,UAAQ,EAACC,IAAK,EAAGC,SAAUhC,EAAcT,MAAOK,EAAKD,mBAGjG,SAACuC,EAAD,WACE,kBAAOL,KAAK,SAAStC,MAAM,mBAG/B,SAAC4C,EAAD,WACE,6EAEE,SAAC,KAAD,CAAMC,GAAI,cAAV,iCAFF,OAGE,SAAC,KAAD,CAAMA,GAAI,kBAAV,uCAMN,SAACC,EAAD,WACE,4BACE,qDACA,SAAC,KAAD,CAAMD,GAAI,SAAV,8BAKN,SAACE,EAAD,WAQR,IAAMjB,EAAekB,EAAAA,GAAAA,IAAH,mIAOZjB,EAAeiB,EAAAA,GAAAA,IAAH,8JAQZF,EAAkBE,EAAAA,GAAAA,IAAH,wmBAiCfhB,EAAgBgB,EAAAA,GAAAA,IAAH,kNASbf,EAAQe,EAAAA,GAAAA,GAAH,mEAKLd,EAAOc,EAAAA,GAAAA,KAAH,yDAIJZ,EAAaY,EAAAA,GAAAA,IAAH,stBAkCVL,EAASK,EAAAA,GAAAA,IAAH,0UAgBNJ,EAAUI,EAAAA,GAAAA,IAAH,0PAgBPD,EAAkBC,EAAAA,GAAAA,IAAH","sources":["components/Auth/Register.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport axiox from \"axios\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nlet name, value;\r\nconst Register = () => {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    cPassword: \"\",\r\n\r\n  })\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const InputHandler = (e) => {\r\n    name = e.target.name;\r\n   value = e.target.value;\r\n   setData({...data, [name]: value})\r\n  }\r\n\r\n  const SubmitHandler = async(e) => {\r\n    e.preventDefault();\r\n\r\nconst {name, email, password, cPassword} = data;\r\nif(!name || !email || !password || !cPassword ) {\r\n  toast(\"Fields can't be empty.\")\r\n}\r\nelse if(password !== cPassword) {\r\n  toast(\"password doesn't match!\")\r\n}else{\r\n  axiox.post(\"/api/v1/register\", \r\n    {name, email, password}).then((res) => {\r\n      console.log(res);\r\n      if(res.status === 201) {\r\n        toast(\"Registration Sucessfull\");\r\n        \r\n        localStorage.setItem(\"digimartToken\", JSON.stringify(res.data.token))\r\n\r\n        setTimeout(() => {\r\n          navigate(\"/\")\r\n          }, 3000);\r\n      }else if(res.status===202) {\r\n        toast(res.data.message);\r\n        setTimeout(() => {\r\n          navigate(\"/login\")\r\n          }, 3000);\r\n      }\r\n \r\n    }).catch((err) => {\r\n\r\n      \r\n  \r\n      console.log(err.message);\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <>\r\n     <ToastContainer />\r\n      <RegContainer>\r\n        <ContainerTop>\r\n          <FormContainer>\r\n            <Title>Create account </Title>\r\n            <Form onSubmit={SubmitHandler}>\r\n              <InputGroup>\r\n                <div>\r\n                  <label htmlFor=\"name\">Enter Your name</label>\r\n                  <input type=\"name\" name=\"name\" required min={3} onChange={InputHandler} value={data.name}/>\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"email\">Enter Your Email</label>\r\n                  <input type=\"email\" name=\"email\" required onChange={InputHandler} value={data.email}/>\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input type=\"password\" name=\"password\" required min={8} onChange={InputHandler} value={data.password} placeholder=\"At least 8 characters\"/>\r\n                  <p><span>i</span> Passwords must be at least 8 characters.</p>\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"password\">Confirm password</label>\r\n                  <input type=\"password\" name=\"cPassword\" required min={8} onChange={InputHandler} value={data.cPassword}/>\r\n                </div>\r\n              </InputGroup>\r\n              <Button>\r\n                <input type=\"submit\" value=\"Register\" />\r\n              </Button>\r\n            </Form>\r\n            <Message>\r\n              <p>\r\n              By creating an account,  you agree to DIGIMART's\r\n                <Link to={\"/conditions\"}> Conditions of Use </Link>and\r\n                <Link to={\"/privacy-policy\"}> Privacy Notice.</Link>\r\n              </p>\r\n             \r\n            </Message>\r\n          </FormContainer>\r\n\r\n          <ButtonContainer>\r\n            <div>\r\n              <p>Already have an account?</p>\r\n              <Link to={\"/login\"}>Sign-In</Link>\r\n            </div>\r\n          </ButtonContainer>\r\n        </ContainerTop>\r\n\r\n        <ContainerBottom></ContainerBottom>\r\n      </RegContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\nconst RegContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n height: 100%;\r\n`;\r\nconst ContainerTop = styled.div`\r\n  width: 100%;\r\n  max-width: 35rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  margin: 2rem;\r\n  width: 100%;\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n \r\n\r\n    & p {\r\n      font-size: 1.2rem;\r\n      color: #666;\r\n      margin: 1rem 0;\r\n    }\r\n    & a {\r\n      text-align: center;\r\n     \r\n      font-size: 1.2rem;\r\n      background: var(--bg-secondary);\r\n      border: 1px solid #666;\r\n      width: 100%;\r\n      border-radius: 3px;\r\n      padding: 1rem;\r\n      transition: all .3s;\r\n        &:hover{\r\n \r\n box-shadow: #66666683 0px -50px 36px -30px inset;\r\n        }\r\n    }\r\n  }\r\n`;\r\nconst FormContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 2rem;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n  border-radius: 5px;\r\n`;\r\nconst Title = styled.h2`\r\n  font-size: 2.5rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst InputGroup = styled.div`\r\n  div {\r\n    margin: 1rem 0;\r\n    & label {\r\n      font-size: 1.3rem;\r\n      color: var(--text-secondary);\r\n    }\r\n    & input {\r\n      width: 100%;\r\n      height: 3rem;\r\n      &:focus {\r\n        border: none;\r\n        outline: none;\r\n        /* outline: 1px solid tomato; */\r\n        box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\r\n          rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\r\n      }\r\n      &::placeholder{\r\n        padding-left: .5rem;\r\n        font-size: 1.3rem;\r\n      }\r\n    }\r\n    p{\r\n      font-size: 1.1rem;\r\n      span{\r\n        font-style: italic;\r\n        color: tomato;\r\n        margin: 1.2rem .5rem 0 0;\r\n        font-weight: 700;\r\n      font-size: 1.5rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Button = styled.div`\r\n  & input {\r\n    font-size: 1.3rem;\r\n    border: none;\r\n    background-color: var(--bg-primary);\r\n    padding: 1rem 2rem;\r\n    border-radius: 5px;\r\n    margin-bottom: 1rem;\r\n    cursor: pointer;\r\n    transition: all 0.5s;\r\n    &:hover {\r\n      color: #fff;\r\n      background-color: #ff6347f6;\r\n    }\r\n  }\r\n`;\r\nconst Message = styled.div`\r\n  margin: 1rem 0;\r\n  font-size: 1.2rem;\r\n  p {\r\n    color: var(--text-secondary);\r\n\r\n    margin-bottom: 1rem;\r\n  }\r\n  a {\r\n    transition: all 0.5s;\r\n  }\r\n  a:hover {\r\n    color: tomato;\r\n    text-decoration: underline;\r\n  }\r\n`;\r\nconst ContainerBottom = styled.div``;\r\n"],"names":["name","value","useState","email","password","cPassword","data","setData","navigate","useNavigate","InputHandler","e","target","SubmitHandler","preventDefault","toast","axiox","then","res","console","log","status","localStorage","setItem","JSON","stringify","token","setTimeout","message","catch","err","RegContainer","ContainerTop","FormContainer","Title","Form","onSubmit","InputGroup","htmlFor","type","required","min","onChange","placeholder","Button","Message","to","ButtonContainer","ContainerBottom","styled"],"sourceRoot":""}