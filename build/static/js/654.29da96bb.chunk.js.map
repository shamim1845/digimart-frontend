{"version":3,"file":"static/js/654.29da96bb.chunk.js","mappings":"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","sources":["components/account/UpdateProfile.jsx","components/utils/MediaUpload.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport MediaUpload from \"../utils/MediaUpload\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst MyProfile = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [isProfile, setIsProfile] = useState(false);\r\n  const [profilePic, setProfilePic] = useState(null);\r\n  const [btnDissable, setBtnDissable] = useState(false)\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/v1/me\").then((res) => {\r\n      setUser(res.data.user);\r\n    });\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: user?.name || \"\",\r\n      email: user?.email || \"\",\r\n      mobile: user?.mobile || \"\",\r\n      birthday: user?.birthday || \"\",\r\n      gender: user?.gender || \"\",\r\n    },\r\n    enableReinitialize: true,\r\n    validationSchema: yup.object({\r\n      name: yup\r\n        .string()\r\n        .min(3, \"Name must have at least 3 characters.\")\r\n        .required(\"Name is required.\"),\r\n      email: yup\r\n        .string()\r\n        .email(\"Email must be a valid email.\")\r\n        .required(\"Email is required.\"),\r\n      mobile: yup.string().max(11).required(\"Phone Number is required.\"),\r\n      birthday: yup.string().required(\"birthday  is required.\"),\r\n      gender: yup.string().required(\"Gender  is required.\"),\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      setBtnDissable(true)\r\n      const { name, email, mobile, birthday, gender } = values;\r\n      console.log(values);\r\n\r\n      function updateProfile(mediaUrls = []) {\r\n        const avatar = {\r\n          public_id: mediaUrls[0]?.public_id\r\n            ? mediaUrls[0]?.public_id\r\n            : user.avatar.public_id,\r\n          url: mediaUrls[0]?.secure_url\r\n            ? mediaUrls[0]?.secure_url\r\n            : user.avatar.url,\r\n        };\r\n\r\n        axios\r\n          .put(`/api/v1/profile/update`, {\r\n            name,\r\n            email,\r\n            avatar,\r\n            mobile,\r\n            birthday,\r\n            gender,\r\n          })\r\n          .then((res) => {\r\n            if (res.status === 200 && res.data.success) {\r\n              toast(\"Profile update Sucessfull\");\r\n              setTimeout(() => {\r\n                navigate(\"/account/myprofile\");\r\n              }, 3000);\r\n            } else {\r\n              toast(res.data.message);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.message);\r\n          });\r\n      }\r\n\r\n      if (profilePic) {\r\n        MediaUpload(profilePic).then((res) => {\r\n          updateProfile(res);\r\n        });\r\n      } else {\r\n        updateProfile();\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <UpdateProfileContainer>\r\n      <Title>\r\n        <h2>Update Profile</h2>\r\n      </Title>\r\n      <Content>\r\n        <UserImage onClick={() => setIsProfile(true)}>\r\n          {\r\n            <>\r\n              <img src={user?.avatar?.url} alt=\"profile_picture\" />\r\n              {isProfile && (\r\n                <div>\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"profilePic\"\r\n                    onChange={(e) => setProfilePic(e.target.files[0])}\r\n                  />\r\n                  {formik.touched.profilePic && formik.errors.profilePic && (\r\n                    <p>\r\n                      <span>i</span> {formik.errors.profilePic}{\" \"}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </>\r\n          }\r\n        </UserImage>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <InputGroup>\r\n            <div>\r\n              <label htmlFor=\"name\"> Full Name</label>\r\n              <input\r\n                type=\"name\"\r\n                name=\"name\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.name}\r\n              />\r\n              {formik.touched.name && formik.errors.name && (\r\n                <p>\r\n                  <span>i</span> {formik.errors.name}{\" \"}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n              />\r\n              {formik.touched.email && formik.errors.email && (\r\n                <p>\r\n                  <span>i</span> {formik.errors.email}{\" \"}\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"mobile\">Mobile</label>\r\n              <input\r\n                type=\"tel\"\r\n                name=\"mobile\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.mobile}\r\n              />\r\n              {formik.touched.mobile && formik.errors.mobile && (\r\n                <p>\r\n                  <span>i</span> {formik.errors.mobile}{\" \"}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"birthday\">Birthday</label>\r\n\r\n              <input\r\n                type=\"date\"\r\n                name=\"birthday\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.birthday}\r\n              />\r\n              {formik.touched.birthday && formik.errors.birthday && (\r\n                <p>\r\n                  <span>i</span> {formik.errors.birthday}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"gender\">Gender :</label>\r\n              <select\r\n                onChange={formik.handleChange}\r\n                value={formik.values.gender}\r\n                name=\"gender\"\r\n              >\r\n                <option value={\"\"}>Choose</option>\r\n                <option value={\"male\"}>Male</option>\r\n                <option value={\"female\"}>Female</option>\r\n              </select>\r\n              {formik.touched.gender && formik.errors.gender && (\r\n                <p>\r\n                  <span>i</span> {formik.errors.gender}{\" \"}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </InputGroup>\r\n          <Button>\r\n            <input\r\n              onClick={formik.handleSubmit}\r\n              type=\"submit\"\r\n              value=\"Update Profile\"\r\n              disabled={btnDissable}\r\n            />\r\n          </Button>\r\n        </Form>\r\n      </Content>\r\n    </UpdateProfileContainer>\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n\r\nconst UpdateProfileContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  width: 100%;\r\n  max-width: 800px;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  border-radius: 0.5rem;\r\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n  padding: 5rem;\r\n  margin: 2rem ;\r\n  width: 90%;\r\n  @media screen and (max-width: 768px) {\r\n    margin: 0 5rem;\r\n  \r\n  }\r\n  @media screen and (max-width: 450px) {\r\n  \r\n    padding: 2rem;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  margin-top: 2rem;\r\n\r\n   width: 90%;\r\n\r\n  h2 {\r\n    text-align: left;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    h2 {\r\n    text-align: center;\r\n  }\r\n  }\r\n`;\r\nconst UserImage = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  margin-bottom: 2rem;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n  img {\r\n    width: 15rem;\r\n    height: 15rem;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst InputGroup = styled.div`\r\n  div {\r\n    margin: 1rem 0;\r\n    & label {\r\n      font-size: 1.3rem;\r\n      color: var(--text-secondary);\r\n    }\r\n    & input {\r\n      width: 100%;\r\n      height: 3.5rem;\r\n      padding: 0 1rem;\r\n      border: none;\r\n      outline: none;\r\n      &:focus {\r\n        box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\r\n          rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\r\n      }\r\n      &::placeholder {\r\n        padding-left: 0.5rem;\r\n        font-size: 1.3rem;\r\n      }\r\n    }\r\n    p {\r\n      font-size: 1.1rem;\r\n      span {\r\n        font-style: italic;\r\n        color: tomato;\r\n        margin: 1.3rem 0.4rem 0 0;\r\n        font-weight: 700;\r\n        font-size: 1.3rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Button = styled.div`\r\n  & input {\r\n    font-size: 1.3rem;\r\n    border: none;\r\n    background-color: var(--bg-primary);\r\n    padding: 1rem 2rem;\r\n    border-radius: 5px;\r\n    margin-bottom: 1rem;\r\n    cursor: pointer;\r\n    transition: all 0.5s;\r\n    &:hover {\r\n      color: #fff;\r\n      background-color: #ff6347f6;\r\n    }\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\n\r\nconst MediaUpload = (file) => {\r\n  // Upload image on Cloudinary\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = (res) => {\r\n      const public_id = file.name.split(\".\")[0];\r\n\r\n      axios\r\n        .post(\"/api/v1/media/uploadImage\", {\r\n          images: [\r\n            {\r\n              base64: res.target.result,\r\n              options: {\r\n                public_id: public_id,\r\n                tags: [public_id],\r\n              },\r\n            },\r\n          ],\r\n        })\r\n        .then((res) => {\r\n          resolve(res.data.urls);\r\n        })\r\n        .catch((err) => {\r\n          reject(err.message);\r\n        });\r\n    };\r\n  });\r\n};\r\n\r\nexport default MediaUpload;\r\n"],"names":["useState","user","setUser","isProfile","setIsProfile","profilePic","setProfilePic","btnDissable","setBtnDissable","navigate","useNavigate","useEffect","axios","then","res","data","formik","useFormik","initialValues","name","email","mobile","birthday","gender","enableReinitialize","validationSchema","yup","min","required","max","onSubmit","values","resetForm","updateProfile","mediaUrls","avatar","public_id","url","secure_url","status","success","toast","setTimeout","message","catch","err","console","log","MediaUpload","UpdateProfileContainer","Title","Content","UserImage","onClick","src","alt","type","onChange","e","target","files","touched","errors","Form","handleSubmit","InputGroup","htmlFor","handleChange","value","Button","disabled","styled","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","images","base64","result","options","tags","urls"],"sourceRoot":""}