{"version":3,"file":"static/js/32.e488c4e2.chunk.js","mappings":"wOAuHA,UA9Gc,WAAO,IAAD,EACZA,GAAWC,EAAAA,EAAAA,MAEXC,GAAe,WADJC,EAAAA,EAAAA,MACaC,aAAT,eAAgBC,OAAQ,YAEvCC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,GAAW,CAC3BH,MAAOG,EAAAA,KAEJH,MAAM,gCACNI,SAAS,sBACZH,SAAUE,EAAAA,KAEPE,IAAI,EAAG,6CACPD,SAAS,2BAEdE,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACXR,EAAoBO,EAApBP,MAAOC,EAAaM,EAAbN,SAEfQ,IAAAA,KAAA,gBACyB,CAAET,MAAAA,EAAOC,SAAAA,IAC/BS,MAAK,SAACC,GACc,MAAfA,EAAIC,QACNC,EAAAA,GAAAA,QAAc,sBAEdC,YAAW,WACTvB,EAASE,EAAc,CAAEsB,SAAS,IAClCC,OAAOC,SAASC,WACf,MAEHL,EAAAA,GAAAA,MAAY,4BAGfM,OAAM,SAACC,GACNP,EAAAA,GAAAA,MAAY,yBACZQ,QAAQC,IAAIF,MAGhBZ,EAAU,CAAED,OAAQ,QAIxB,OACE,iCACE,SAAC,KAAD,KACA,SAACgB,EAAD,WACE,UAACC,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,wBACA,UAACC,EAAD,CAAMrB,SAAUT,EAAO+B,aAAvB,WACE,UAACC,EAAD,YACE,4BACE,kBAAOC,QAAQ,QAAf,+BACA,kBACEC,KAAK,QACLC,KAAK,QACLC,SAAUpC,EAAOqC,aACjBC,MAAOtC,EAAOU,OAAOP,QAEtBH,EAAOuC,QAAQpC,OAASH,EAAOwC,OAAOrC,QACrC,0BACE,gCADF,IACkBH,EAAOwC,OAAOrC,MAAO,WAI3C,4BACE,kBAAO8B,QAAQ,WAAf,uBACA,kBACEC,KAAK,WACLC,KAAK,WACLC,SAAUpC,EAAOqC,aACjBC,MAAOtC,EAAOU,OAAON,WAEtBJ,EAAOuC,QAAQnC,UAAYJ,EAAOwC,OAAOpC,WACxC,0BACE,gCADF,IACkBJ,EAAOwC,OAAOpC,SAAU,cAKhD,SAACqC,EAAD,WACE,kBAAOP,KAAK,SAASI,MAAM,gBAG/B,UAACI,EAAD,YACE,kEACyC,KACvC,SAAC,KAAD,CAAMC,GAAI,cAAV,iCAFF,MAEyD,KACvD,SAAC,KAAD,CAAMA,GAAI,kBAAV,kCAEF,SAAC,KAAD,CAAMA,GAAI,mBAAV,2CAIJ,SAACC,EAAD,WACE,4BACE,6CACA,SAAC,KAAD,CAAMD,GAAI,YAAV,+CAWd,IAAMjB,EAAiBmB,EAAAA,GAAAA,IAAH,mHAMdlB,EAAekB,EAAAA,GAAAA,IAAH,8JAQZD,EAAkBC,EAAAA,GAAAA,IAAH,kmBA+BfjB,EAAgBiB,EAAAA,GAAAA,IAAH,kNASbhB,EAAQgB,EAAAA,GAAAA,GAAH,mEAKLf,EAAOe,EAAAA,GAAAA,KAAH,yDAIJb,EAAaa,EAAAA,GAAAA,IAAH,moBA+BVJ,EAASI,EAAAA,GAAAA,IAAH,0UAgBNH,EAAUG,EAAAA,GAAAA,IAAH","sources":["components/Auth/Login.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport axiox from \"axios\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const redirectPath = location.state?.path || \"/products\";\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      email: yup\r\n        .string()\r\n        .email(\"Email must be a valid email.\")\r\n        .required(\"Email is required.\"),\r\n      password: yup\r\n        .string()\r\n        .min(8, \"Password must have at least 8 characters.\")\r\n        .required(\"Password is required.\"),\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      const { email, password } = values;\r\n\r\n      axiox\r\n        .post(`/api/v1/login`, { email, password })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            toast.success(\"Login successfull.\");\r\n\r\n            setTimeout(() => {\r\n              navigate(redirectPath, { replace: true });\r\n              window.location.reload();\r\n            }, 3000);\r\n          } else {\r\n            toast.error(\"Invalid login details\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          toast.error(\"Invalid login details\");\r\n          console.log(err);\r\n        });\r\n\r\n      resetForm({ values: \"\" });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <LoginContainer>\r\n        <ContainerTop>\r\n          <FormContainer>\r\n            <Title>Sign In </Title>\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <InputGroup>\r\n                <div>\r\n                  <label htmlFor=\"email\">Enter Your Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                  />\r\n                  {formik.touched.email && formik.errors.email && (\r\n                    <p>\r\n                      <span>i</span> {formik.errors.email}{\" \"}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                  />\r\n                  {formik.touched.password && formik.errors.password && (\r\n                    <p>\r\n                      <span>i</span> {formik.errors.password}{\" \"}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </InputGroup>\r\n              <Button>\r\n                <input type=\"submit\" value=\"Login\" />\r\n              </Button>\r\n            </Form>\r\n            <Message>\r\n              <p>\r\n                By continuing, you agree to DIGIMART's{\" \"}\r\n                <Link to={\"/conditions\"}> Conditions of Use </Link>and{\" \"}\r\n                <Link to={\"/privacy-policy\"}> Privacy Notice.</Link>\r\n              </p>\r\n              <Link to={\"/password/forgot\"}> Forgot your password?</Link>\r\n            </Message>\r\n          </FormContainer>\r\n\r\n          <ButtonContainer>\r\n            <div>\r\n              <p>New to DIGIMART?</p>\r\n              <Link to={\"/register\"}>Create Your Account</Link>\r\n            </div>\r\n          </ButtonContainer>\r\n        </ContainerTop>\r\n      </LoginContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n`;\r\nconst ContainerTop = styled.div`\r\n  width: 100%;\r\n  max-width: 35rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  margin: 2rem;\r\n  width: 100%;\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n\r\n    & p {\r\n      font-size: 1.2rem;\r\n      color: #666;\r\n      margin: 1rem 0;\r\n    }\r\n    & a {\r\n      text-align: center;\r\n\r\n      font-size: 1.2rem;\r\n      background: var(--bg-secondary);\r\n      border: 1px solid #666;\r\n      width: 100%;\r\n      border-radius: 3px;\r\n      padding: 1rem;\r\n      transition: all 0.3s;\r\n      &:hover {\r\n        box-shadow: #66666683 0px -50px 36px -30px inset;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst FormContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 2rem;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n  border-radius: 5px;\r\n`;\r\nconst Title = styled.h2`\r\n  font-size: 2.5rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst InputGroup = styled.div`\r\n  div {\r\n    margin: 1rem 0;\r\n    & label {\r\n      font-size: 1.3rem;\r\n      color: var(--text-secondary);\r\n    }\r\n    & input {\r\n      width: 100%;\r\n      height: 3rem;\r\n      &:focus {\r\n        border: none;\r\n        outline: none;\r\n        /* outline: 1px solid tomato; */\r\n        box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\r\n          rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\r\n      }\r\n    }\r\n\r\n    p {\r\n      font-size: 1.1rem;\r\n      span {\r\n        font-style: italic;\r\n        color: tomato;\r\n        margin: 1.3rem 0.4rem 0 0;\r\n        font-weight: 700;\r\n        font-size: 1.3rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Button = styled.div`\r\n  & input {\r\n    font-size: 1.3rem;\r\n    border: none;\r\n    background-color: var(--bg-primary);\r\n    padding: 1rem 2rem;\r\n    border-radius: 5px;\r\n    margin-bottom: 1rem;\r\n    cursor: pointer;\r\n    transition: all 0.5s;\r\n    &:hover {\r\n      color: #fff;\r\n      background-color: #ff6347f6;\r\n    }\r\n  }\r\n`;\r\nconst Message = styled.div`\r\n  margin: 1rem 0;\r\n  font-size: 1.2rem;\r\n  p {\r\n    color: var(--text-secondary);\r\n\r\n    margin-bottom: 1rem;\r\n  }\r\n  a {\r\n    transition: all 0.5s;\r\n  }\r\n  a:hover {\r\n    color: tomato;\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n"],"names":["navigate","useNavigate","redirectPath","useLocation","state","path","formik","useFormik","initialValues","email","password","validationSchema","yup","required","min","onSubmit","values","resetForm","axiox","then","res","status","toast","setTimeout","replace","window","location","reload","catch","err","console","log","LoginContainer","ContainerTop","FormContainer","Title","Form","handleSubmit","InputGroup","htmlFor","type","name","onChange","handleChange","value","touched","errors","Button","Message","to","ButtonContainer","styled"],"sourceRoot":""}