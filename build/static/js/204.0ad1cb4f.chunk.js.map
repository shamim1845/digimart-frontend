{"version":3,"file":"static/js/204.0ad1cb4f.chunk.js","mappings":"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","sources":["components/products/Filter.jsx","components/products/AllProducts.js","components/products/ProductCard.js","components/utils/Pagination.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchAsyncProductForFilter,\r\n  fetchAsyncProducts,\r\n} from \"../../features/products/productSlice\";\r\nimport {\r\n  addCategory,\r\n  addKeyword,\r\n} from \"../../features/productFilter/productFilterSlice\";\r\n\r\nexport default function RangeSlider({ currentPage, setCurrentPage }) {\r\n  const [price, setPrice] = useState([0, 200000]);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setPrice(newValue);\r\n  };\r\n  const { allCategories } = useSelector((state) => state.products);\r\n  const { keyword, category } = useSelector((state) => state.productFilter);\r\n  const catHandler = (cat) => {\r\n    setCurrentPage(1);\r\n    dispatch(addCategory(cat));\r\n  };\r\n  useEffect(() => {\r\n    if (\r\n      keyword === \"\" &&\r\n      category === \"\" &&\r\n      price[0] === 0 &&\r\n      price[1] === 200000\r\n    ) {\r\n      dispatch(fetchAsyncProducts(currentPage));\r\n    } else {\r\n      dispatch(\r\n        fetchAsyncProductForFilter({\r\n          keyword: keyword,\r\n          category,\r\n          pricestart: price[0],\r\n          priceend: price[1],\r\n          currentPage,\r\n        })\r\n      );\r\n    }\r\n  }, [category, dispatch, price, keyword, currentPage, navigate]);\r\n  function clearFilter() {\r\n    if (\r\n      keyword ||\r\n      category ||\r\n      currentPage !== 1 ||\r\n      price[0] !== 0 ||\r\n      price[1] !== 200000\r\n    ) {\r\n      dispatch(addKeyword(\"\"));\r\n      dispatch(addCategory(\"\"));\r\n      setPrice([0, 200000]);\r\n      setCurrentPage(1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {allCategories.categories && (\r\n        <ContentWrapper>\r\n          <Price>\r\n            <p className=\"title\">Price</p>\r\n            <Slider\r\n              value={price}\r\n              onChangeCommitted={handleChange}\r\n              valueLabelDisplay=\"auto\"\r\n              aria-labelledby=\"range-slider\"\r\n              min={0}\r\n              max={200000}\r\n            />\r\n          </Price>\r\n          <Categories>\r\n            <p className=\"title\">Categories</p>\r\n            <ul>\r\n              {allCategories?.categories?.map((cat, index) => {\r\n                return (\r\n                  <li\r\n                    style={category === cat ? { color: \"tomato\" } : {}}\r\n                    onClick={() => catHandler(cat)}\r\n                    key={index}\r\n                  >\r\n                    {cat}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </Categories>\r\n          <ClearFilter>\r\n            <button onClick={clearFilter}>Clear filter</button>\r\n          </ClearFilter>\r\n        </ContentWrapper>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  .title {\r\n    font-size: 14px;\r\n    color: #212121;\r\n    font-weight: 400;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  min-width: 50%;\r\n`;\r\n\r\nconst Price = styled.div`\r\n  margin-bottom: 1.5rem;\r\n\r\n  .MuiSlider-colorPrimary {\r\n    color: tomato;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    text-align: start;\r\n  }\r\n`;\r\n\r\nconst Categories = styled.div`\r\n  ul {\r\n    margin-top: 0.5rem;\r\n    padding-left: 0;\r\n    li {\r\n      text-transform: capitalize;\r\n      font-size: 1.3rem;\r\n      color: #757575;\r\n      line-height: 2rem;\r\n      cursor: pointer;\r\n      &:hover {\r\n        color: tomato;\r\n      }\r\n    }\r\n    .active {\r\n      color: tomato;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    text-align: start;\r\n    margin: auto;\r\n    ul {\r\n      column-count: 3;\r\n\r\n      li {\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ClearFilter = styled.div`\r\n  @media screen and (max-width: 768px) {\r\n    display: flex;\r\n    justify-content: start;\r\n    margin: 2rem 0;\r\n    width: 100%;\r\n  }\r\n  button {\r\n    background: tomato;\r\n    border: none;\r\n    outline: none;\r\n    padding: 0.5rem;\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport PageContainer from \"../utils/PageContainer\";\r\nimport Loading from \"../utils/Loading\";\r\nimport Filter from \"./Filter\";\r\nimport Product from \"./ProductCard\";\r\nimport Pagination from \"../utils/Pagination\";\r\n\r\nconst AllProductDisplay = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const productDetails = useSelector((state) => state.products);\r\n  const { loading, allProducts } = productDetails;\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n\r\n      <PageContainer>\r\n        <MainTitle>\r\n          <h2>Product List</h2>\r\n        </MainTitle>\r\n\r\n        <ProductContainer>\r\n          <FilterBox>\r\n            <Filter currentPage={currentPage} setCurrentPage={setCurrentPage} />\r\n          </FilterBox>\r\n          {allProducts?.products?.length > 0 && (\r\n            <ProductBox>\r\n              {allProducts.products.map((product) => {\r\n                return <Product key={product._id} product={product} />;\r\n              })}\r\n            </ProductBox>\r\n          )}\r\n\r\n          {allProducts?.products?.length === 0 && (\r\n            <NoProduct>\r\n              <h3>No products found...</h3>\r\n            </NoProduct>\r\n          )}\r\n        </ProductContainer>\r\n        {allProducts?.page?.length > 1 && (\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            setCurrentPage={setCurrentPage}\r\n            pages={allProducts.page}\r\n          />\r\n        )}\r\n      </PageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllProductDisplay;\r\nconst NoProduct = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst MainTitle = styled.div`\r\n  margin: 3rem 0 2rem 0;\r\n  h2 {\r\n    border-bottom: 4px solid #ddd;\r\n    font-size: 3rem;\r\n  }\r\n`;\r\n\r\nconst ProductContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: 1440px;\r\n  margin-bottom: 2rem;\r\n  /* background-color: rebeccapurple; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\nconst FilterBox = styled.div`\r\n  padding: 0 1.5rem;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\nconst ProductBox = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  justify-content: center;\r\n  align-content: center;\r\n  place-items: center;\r\n  gap: 1.5rem;\r\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\r\n`;\r\n","import { Rating } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ProductCard = ({ product }) => {\r\n  return (\r\n    <>\r\n      <CardContainer>\r\n        <Link to={`/products/${product._id}`}>\r\n          <CardHead>\r\n            <img src={product.images[0].url} alt=\"\" />\r\n          </CardHead>\r\n          <CardBody>\r\n            <div className=\"title\">\r\n              {product.name.length > 35 ? (\r\n                <p>{`${product.name.slice(0, 35)}...`}</p>\r\n              ) : (\r\n                <p>{product.name}</p>\r\n              )}\r\n            </div>\r\n            <div className=\"price\">\r\n              <p>{`$ ${product.price}`}</p>\r\n            </div>\r\n            <div className=\"rating\">\r\n              <Rating\r\n                name=\"half-rating-read\"\r\n                value={product.avgRatings}\r\n                precision={0.1}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </CardBody>\r\n        </Link>\r\n      </CardContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n\r\nconst CardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #fff;\r\n  position: relative;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: all 0.5s;\r\n  overflow: hidden;\r\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\r\n\r\n  &:hover {\r\n    transform: translateY(-1rem);\r\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\r\n      rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\r\n  }\r\n\r\n  @media screen and (max-width: 576px) {\r\n    margin: 1rem 0;\r\n  }\r\n`;\r\n\r\nconst CardHead = styled.div`\r\n  img {\r\n    min-height: 24rem;\r\n    max-height: 100%;\r\n    width: 100%;\r\n    max-width: 24rem;\r\n    object-fit: cover;\r\n    transition: all 0.5s;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\nconst CardBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .title {\r\n    padding: 0 1.5rem;\r\n    p {\r\n      color: #000;\r\n      font-size: 1.4rem;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n  .price {\r\n    p {\r\n      color: #666;\r\n      font-size: 1.3rem;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Pagination = ({ currentPage, setCurrentPage, pages }) => {\r\n  const paginationLinkHandler = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const prevHandler = (e) => {\r\n    e.preventDefault();\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const nextHandler = (e) => {\r\n    e.preventDefault();\r\n    if (currentPage < pages.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n  return (\r\n    <PaginationContainer>\r\n      <Prev>\r\n        <button onClick={prevHandler}>prev</button>\r\n      </Prev>\r\n      <Page>\r\n        {pages &&\r\n          pages?.map((page) => {\r\n            return (\r\n              <p\r\n                style={\r\n                  page === currentPage\r\n                    ? { background: \"#666\", color: \"#fff\" }\r\n                    : null\r\n                }\r\n                key={page}\r\n                onClick={() => paginationLinkHandler(page)}\r\n              >\r\n                {page}\r\n              </p>\r\n            );\r\n          })}\r\n      </Page>\r\n      <Next>\r\n        <button onClick={nextHandler}>Next</button>\r\n      </Next>\r\n    </PaginationContainer>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n\r\nconst PaginationContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  max-width: 1440px;\r\n`;\r\nconst Prev = styled.div`\r\n  button {\r\n    background-color: tomato;\r\n    border: none;\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n    padding: 0.5rem 2rem;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst Page = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  p {\r\n    font-size: 2rem;\r\n    padding: 0 0.7rem;\r\n    margin: 0 0.5rem;\r\n    border-radius: 0.3rem;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background: #666;\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\nconst Next = styled(Prev)``;\r\n"],"names":["RangeSlider","currentPage","setCurrentPage","useState","price","setPrice","dispatch","useDispatch","navigate","useNavigate","allCategories","useSelector","state","products","productFilter","keyword","category","useEffect","fetchAsyncProducts","fetchAsyncProductForFilter","pricestart","priceend","Container","categories","ContentWrapper","Price","className","Slider","value","onChangeCommitted","event","newValue","valueLabelDisplay","min","max","Categories","map","cat","index","style","color","onClick","addCategory","catHandler","ClearFilter","addKeyword","styled","productDetails","loading","allProducts","Loading","PageContainer","MainTitle","ProductContainer","FilterBox","length","ProductBox","product","_id","NoProduct","page","Pagination","pages","CardContainer","to","CardHead","src","images","url","alt","CardBody","name","slice","avgRatings","precision","readOnly","PaginationContainer","Prev","e","preventDefault","Page","background","paginationLinkHandler","Next"],"sourceRoot":""}