{"version":3,"file":"static/js/490.3b4d3814.chunk.js","mappings":"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","sources":["components/order/OrderSummary.jsx","components/order/ShippingInfo.jsx","components/order/DefaultShippingAddress.jsx","components/order/CheckoutForm.jsx","components/order/StripePayment.js","components/order/OrderDetails.jsx","components/order/Order.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAllOrders, paymentInfo } from \"../../features/order/orderSlice\";\r\nimport { rate } from \"../../App\";\r\n\r\nconst OrderSummary = () => {\r\n  const [productPrice, setProductPrice] = useState(0);\r\n  const [shippingCost, setShippingCost] = useState(0);\r\n  const [tax, setTax] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const orderdItems = useSelector(getAllOrders);\r\n\r\n  useEffect(() => {\r\n    const calcProductPrice =\r\n      orderdItems &&\r\n      orderdItems?.reduce((acc, item) => {\r\n        return acc + (item.product.price * item.quantity);\r\n      }, 0);\r\n    const calcShippingCost = Math.round(calcProductPrice * (rate.shipping / 100));\r\n    const calcTax = Math.round(calcProductPrice * (rate.tax / 100));\r\n\r\n    setProductPrice(calcProductPrice);\r\n    setShippingCost(calcShippingCost);\r\n    setTax(calcTax);\r\n    setTotal(calcProductPrice + calcShippingCost + calcTax);\r\n    dispatch(\r\n      paymentInfo({\r\n        products_price: calcProductPrice,\r\n        shipping_cost: calcShippingCost,\r\n        tax: calcTax,\r\n        totalPayAmount: calcProductPrice + calcShippingCost + tax,\r\n      })\r\n    );\r\n  }, [orderdItems, shippingCost, dispatch, tax]);\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"content\">\r\n        <h2>Order Summary</h2>\r\n\r\n        <dl className=\"sub_total\">\r\n          <dt>Product price</dt>\r\n          <dd> ${productPrice}</dd>\r\n        </dl>\r\n\r\n        <dl className=\"shipping\">\r\n          <dt>Shipping cost</dt>\r\n          <dd> ${shippingCost}</dd>\r\n        </dl>\r\n        <dl className=\"shipping\">\r\n          <dt>Tax</dt>\r\n          <dd> ${tax}</dd>\r\n        </dl>\r\n        <div className=\"hr\"></div>\r\n\r\n        <dl className=\"total\">\r\n          <dt>Total</dt>\r\n          <dd> ${total}</dd>\r\n        </dl>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrderSummary;\r\n\r\nconst Container = styled.div`\r\n  width: 25%;\r\n  max-width: 35rem;\r\n  .content {\r\n    background: #fff;\r\n    padding: 1rem 2rem;\r\n    margin: 1rem 0 1rem 1rem;\r\n    border-radius: 0.5rem;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      margin: 0;\r\n    }\r\n\r\n    h2 {\r\n      font-size: 2.5rem;\r\n      font-weight: 600;\r\n      margin-bottom: 2.4rem;\r\n    }\r\n    dd,\r\n    dt {\r\n      font-size: 1.4rem;\r\n      color: #000;\r\n      font-weight: 400;\r\n    }\r\n    .sub_total {\r\n      display: flex;\r\n      justify-content: space-between;\r\n    }\r\n    .shipping {\r\n      display: flex;\r\n      justify-content: space-between;\r\n    }\r\n    .total {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      dd,\r\n      dt {\r\n        font-size: 1.4rem;\r\n        color: #000;\r\n        font-weight: 600;\r\n      }\r\n      dd {\r\n        font-size: 2rem;\r\n      }\r\n    }\r\n    .hr {\r\n      border: 1px solid #f2f2f2;\r\n      margin: 2rem 0;\r\n    }\r\n    .buy_now {\r\n      width: 100%;\r\n      border: none;\r\n      background: tomato;\r\n      padding: 1rem 0;\r\n      border-radius: 0.5rem;\r\n      font-size: 1.6rem;\r\n      color: #fff;\r\n      cursor: pointer;\r\n      margin: 2rem 0 1rem;\r\n    }\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n    padding-right: 0.5rem;\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport LocalPhoneIcon from \"@mui/icons-material/LocalPhone\";\r\nimport AddLocationAltIcon from \"@mui/icons-material/AddLocationAlt\";\r\nimport PublicIcon from \"@mui/icons-material/Public\";\r\nimport TransferWithinAStationIcon from \"@mui/icons-material/TransferWithinAStation\";\r\nimport LocationCityIcon from \"@mui/icons-material/LocationCity\";\r\nimport { shippingInformation } from \"../../features/order/orderSlice\";\r\n\r\n\r\nconst ShippingInfo = ({ setIsShipping}) => {\r\n  const [countryCode, setCountryCode] = useState(\"\");\r\n  const [stateCode, setStateCode] = useState(\"\");\r\n  const [shippingMsg, setShippingMsg] = useState(\"\");\r\n  const [shippingData, setShippingData] = useState({\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    country: \"\",\r\n    postCode: \"\",\r\n    phoneNo: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n \r\n\r\n  useEffect(() => {\r\n \r\n      setShippingData((prev) => {\r\n        return { ...prev, state: \"\", city: \"\" };\r\n      });\r\n      setStateCode(\"\");\r\n   \r\n\r\n\r\n  }, [shippingData.country]);\r\n\r\n  const shippingDataHandler = (e) => {\r\n    e.preventDefault();\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setShippingData((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n  };\r\n\r\n  const countryHandler = (e) => {\r\n    const value = e.target.value;\r\n    setCountryCode(value);\r\n    const country = Country.getCountryByCode(value);\r\n    console.log(country)\r\n    setShippingData((prev) => {\r\n      return { ...prev, country: country.name };\r\n    });\r\n  };\r\n\r\n  const stateHandler = (e) => {\r\n    const value = e.target.value;\r\n    setStateCode(value);\r\n\r\n    const state = State.getStateByCodeAndCountry(value, countryCode);\r\n      setShippingData((prev) => {\r\n      return { ...prev, state: state.name };\r\n    });\r\n  };\r\n\r\n  const saveShippingInfo = () => {\r\n    if(shippingData.address !== '' && shippingData.city !== \"\" && shippingData.state !== \"\" && shippingData.country !== \"\" && shippingData.postCode !== \"\" && shippingData.phoneNo !== \"\"){\r\n      setShippingMsg(\"Shipping information saved.\");\r\n       localStorage.setItem(\"shippingInfo\", JSON.stringify(shippingData));\r\n        dispatch(shippingInformation({shippingInfo: shippingData}))\r\n    }else{\r\n      setShippingMsg(\"Please filled all of this details\")\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <ShippingContainer>\r\n      <MainContainer>\r\n        <Title>\r\n          <h2>Update address</h2>\r\n          <i className=\"bi bi-x-lg\" onClick={() => setIsShipping(false)}></i>\r\n        </Title>\r\n        <Form>\r\n          <div className=\"input_group\">\r\n            <HomeIcon fontSize=\"large\" />\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"address\"\r\n              value={shippingData.address}\r\n              onChange={shippingDataHandler}\r\n              placeholder=\"Address\"\r\n            />\r\n          </div>\r\n          <div className=\"input_group\">\r\n            <LocalPhoneIcon fontSize=\"large\" />\r\n            <input\r\n              type=\"number\"\r\n              required\r\n              name=\"phoneNo\"\r\n              value={shippingData.phoneNo}\r\n              onChange={shippingDataHandler}\r\n              placeholder=\"Phone Number\"\r\n           \r\n            />\r\n          </div>\r\n          <div className=\"input_group\">\r\n            <AddLocationAltIcon fontSize=\"large\" />\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"postCode\"\r\n              value={shippingData.postCode}\r\n              onChange={shippingDataHandler}\r\n              placeholder=\"Zip Code\"\r\n            />\r\n          </div>\r\n          <div className=\"input_group\">\r\n            <PublicIcon fontSize=\"large\" />\r\n            <select required name=\"country\" onChange={countryHandler}>\r\n              <option value=\"\">Country</option>\r\n              {Country &&\r\n                Country.getAllCountries().map((country) => (\r\n                  <option key={country.isoCode} value={country.isoCode}>\r\n                    {country.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          {countryCode && (\r\n            <div className=\"input_group\">\r\n              <TransferWithinAStationIcon fontSize=\"large\" />\r\n              <select required name=\"state\" onChange={stateHandler}>\r\n                <option value=\"\">State</option>\r\n                {State &&\r\n                  State.getStatesOfCountry(countryCode).map((state) => (\r\n                    <option key={state.isoCode} value={state.isoCode}>\r\n                      {state.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n          {stateCode && (\r\n            <div className=\"input_group\">\r\n              <LocationCityIcon fontSize=\"large\" />\r\n              <select\r\n                required\r\n                name=\"city\"\r\n                value={shippingData.city}\r\n                onChange={shippingDataHandler}\r\n              >\r\n                <option value=\"\">City</option>\r\n                {City &&\r\n                  City.getCitiesOfState(countryCode, stateCode).map((city) => (\r\n                    <option key={city.name} value={city.name}>\r\n                      {city.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n          {\r\n            shippingMsg && <div>\r\n              <p>{shippingMsg}</p>\r\n            </div>\r\n          }\r\n          <div className=\"input_button\" onClick={saveShippingInfo}>\r\n            <input type=\"button\" value=\"Save & Continue\" />\r\n          </div>\r\n        </Form>\r\n      </MainContainer>\r\n    </ShippingContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingInfo;\r\n\r\nconst ShippingContainer = styled.div`\r\n  /* position: absolute; */\r\n  /* background: #f2f2f2; */\r\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n  /* width: 1000rem;\r\nheight: auto; */\r\n  padding: 2rem;\r\n  z-index: 100;\r\n`;\r\nconst MainContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\nconst Title = styled.div`\r\n  display: flex;\r\n  i {\r\n    position: absolute;\r\n    right: 0;\r\n    top: -1.5rem;\r\n    font-size: 2rem;\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n    &:hover {\r\n      color: red;\r\n    }\r\n  }\r\n`;\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .input_group {\r\n    width: 100%;\r\n    max-width: 40rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 1px solid #f2f2f2;\r\n    margin: 0.5rem 0;\r\n    padding-left: 0.5rem;\r\n\r\n    input,\r\n    select {\r\n      width: 100%;\r\n      max-width: 40rem;\r\n      padding: 1rem;\r\n      margin: 0.5rem;\r\n      font-size: 1.3rem;\r\n      border: none;\r\n\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .input_button {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n\r\n    input {\r\n      width: 100%;\r\n      max-width: 40rem;\r\n      padding: 1rem;\r\n      margin: 0.5rem;\r\n      font-size: 1.3rem;\r\n      border: none;\r\n      transition: all 0.5s;\r\n\r\n      &:hover {\r\n        color: tomato;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst DefaultShippingAddress = () => {\r\n\r\n    const shippingInfo = JSON.parse(localStorage.getItem(\"shippingInfo\"));\r\n    // console.log(shippingInfo);\r\n  return (\r\n      <>\r\n      {\r\n          shippingInfo &&     <DefaultShippingContainer>\r\n          <Title>Default Shipping Address</Title>\r\n         \r\n            <MainContent>\r\n          <p>Address: <span>{shippingInfo.address}</span></p>\r\n          <p>Phone Number: <span>{shippingInfo.phoneNo}</span></p>\r\n          <p>Zip Code: <span>{shippingInfo.postCode}</span></p>\r\n          <p>Country: <span>{shippingInfo.country}</span></p>\r\n          <p>State: <span>{shippingInfo.state}</span></p>\r\n          <p>City: <span>{shippingInfo.city}</span></p>\r\n          </MainContent>\r\n  \r\n      </DefaultShippingContainer>\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DefaultShippingAddress;\r\n\r\nconst DefaultShippingContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    `\r\nconst Title = styled.h4`\r\n    margin-bottom: 1rem;\r\n`\r\n    const MainContent = styled.div`\r\n        p{\r\n            color: #000!important;\r\n            span{\r\n                color: #666;\r\n            }\r\n        }\r\n    `","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport {\r\n  PaymentElement,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  getAllOrders,\r\n  getPaymentInfo,\r\n  getShippingInformation,\r\n} from \"../../features/order/orderSlice\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function CheckoutForm({ clientSecret }) {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const shippingInfo = useSelector(getShippingInformation);\r\n  const orderdItem = useSelector(getAllOrders);\r\n  const paymentInfo = useSelector(getPaymentInfo);\r\n  // console.log(paymentInfo);\r\n\r\n  // Create a Order After complete the payment\r\n  const createNewOrder = (paymentIntent) => {\r\n    let orderItems = [];\r\n    orderdItem.map((item) => {\r\n      orderItems.push({\r\n        productId: item.product._id,\r\n        name: item.product.name,\r\n        price: item.product.price,\r\n        quantity: item.quantity,\r\n        image: item.product.images[0].url,\r\n      });\r\n\r\n      return null;\r\n    });\r\n\r\n    const newOrder = {\r\n      shippingInfo,\r\n      orderItems,\r\n      paymentInfo: {\r\n        id: paymentIntent.id,\r\n        status: paymentIntent.status,\r\n        itemsPrice: paymentInfo.products_price,\r\n        taxPrice: paymentInfo.tax,\r\n        shippingPrice: paymentInfo.shipping_cost,\r\n        totalPrice: paymentInfo.totalPayAmount,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\"/api/v1/order/new\", newOrder)\r\n      .then((res) => {\r\n        if (res.status === 201) {\r\n          setIsLoading(false);\r\n          toast(\"Your order has been Successfully created.\");\r\n          setTimeout(() => {\r\n            navigate(\"/order/sucess\");\r\n          }, 3000);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast(\"Your order have not created.\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const { error, paymentIntent } = await stripe.confirmPayment({\r\n      elements,\r\n      confirmParams: {\r\n        // Make sure to change this to your payment completion page\r\n        // return_url: \"http://localhost:3000/order/sucess\",\r\n      },\r\n      redirect: \"if_required\",\r\n    });\r\n\r\n    stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\r\n      switch (paymentIntent.status) {\r\n        case \"succeeded\":\r\n          setMessage(\"Payment succeeded!\");\r\n          break;\r\n        case \"processing\":\r\n          setMessage(\"Your payment is processing.\");\r\n          break;\r\n        case \"requires_payment_method\":\r\n          setMessage(\"Your payment was not successful, please try again.\");\r\n          break;\r\n        default:\r\n          setMessage(\"Something went wrong.\");\r\n          break;\r\n      }\r\n    });\r\n    // This point will only be reached if there is an immediate error when\r\n    // confirming the payment. Otherwise, your customer will be redirected to\r\n    // your `return_url`. For some payment methods like iDEAL, your customer will\r\n    // be redirected to an intermediate site first to authorize the payment, then\r\n    // redirected to the `return_url`.\r\n\r\n    if (error) {\r\n      if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n        setMessage(error.message);\r\n      } else {\r\n        setMessage(error.message);\r\n      }\r\n    }\r\n\r\n    if (!error && paymentIntent && paymentIntent.status === \"succeeded\") {\r\n      createNewOrder(paymentIntent);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CheckoutFormContainer>\r\n      <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n        <PaymentElement id=\"payment-element\" />\r\n        <button disabled={isLoading || !stripe || !elements} id=\"submit\">\r\n          <span id=\"button-text\">\r\n            {isLoading ? (\r\n              <div className=\"spinner\" id=\"spinner\"></div>\r\n            ) : (\r\n              \"Pay Now\"\r\n            )}\r\n          </span>\r\n        </button>\r\n        {/* Show any error or success messages */}\r\n        {message && <div id=\"payment-message\">{message}</div>}\r\n      </form>\r\n    </CheckoutFormContainer>\r\n  );\r\n}\r\n\r\nconst CheckoutFormContainer = styled.div`\r\n  form {\r\n    width: 30vw;\r\n    min-width: 500px;\r\n    align-self: center;\r\n    box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\r\n      0px 2px 5px 0px rgba(50, 50, 93, 0.1),\r\n      0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\r\n    border-radius: 7px;\r\n    padding: 40px;\r\n\r\n    #payment-element {\r\n      margin-bottom: 24px;\r\n    }\r\n    button {\r\n      background: #5469d4;\r\n      font-family: Arial, sans-serif;\r\n      color: #ffffff;\r\n      border-radius: 4px;\r\n      border: 0;\r\n      padding: 12px 16px;\r\n      font-size: 16px;\r\n      font-weight: 600;\r\n      cursor: pointer;\r\n      display: block;\r\n      transition: all 0.2s ease;\r\n      box-shadow: 0px 4px 5.5px 0px rgba(0, 0, 0, 0.07);\r\n      width: 100%;\r\n\r\n      &:hover {\r\n        filter: contrast(115%);\r\n      }\r\n\r\n      &:disabled {\r\n        opacity: 0.5;\r\n        cursor: default;\r\n      }\r\n\r\n      .spinner,\r\n      .spinner:before,\r\n      .spinner:after {\r\n        border-radius: 50%;\r\n      }\r\n\r\n      .spinner {\r\n        color: #ffffff;\r\n        font-size: 22px;\r\n        text-indent: -99999px;\r\n        margin: 0px auto;\r\n        position: relative;\r\n        width: 20px;\r\n        height: 20px;\r\n        box-shadow: inset 0 0 0 2px;\r\n        -webkit-transform: translateZ(0);\r\n        -ms-transform: translateZ(0);\r\n        transform: translateZ(0);\r\n      }\r\n\r\n      .spinner:before,\r\n      .spinner:after {\r\n        position: absolute;\r\n        content: \"\";\r\n      }\r\n\r\n      .spinner:before {\r\n        width: 10.4px;\r\n        height: 20.4px;\r\n        background: #5469d4;\r\n        border-radius: 20.4px 0 0 20.4px;\r\n        top: -0.2px;\r\n        left: -0.2px;\r\n        -webkit-transform-origin: 10.4px 10.2px;\r\n        transform-origin: 10.4px 10.2px;\r\n        -webkit-animation: loading 2s infinite ease 1.5s;\r\n        animation: loading 2s infinite ease 1.5s;\r\n      }\r\n\r\n      .spinner:after {\r\n        width: 10.4px;\r\n        height: 10.2px;\r\n        background: #5469d4;\r\n        border-radius: 0 10.2px 10.2px 0;\r\n        top: -0.1px;\r\n        left: 10.2px;\r\n        -webkit-transform-origin: 0px 10.2px;\r\n        transform-origin: 0px 10.2px;\r\n        -webkit-animation: loading 2s infinite ease;\r\n        animation: loading 2s infinite ease;\r\n      }\r\n\r\n      @keyframes loading {\r\n        0% {\r\n          -webkit-transform: rotate(0deg);\r\n          transform: rotate(0deg);\r\n        }\r\n        100% {\r\n          -webkit-transform: rotate(360deg);\r\n          transform: rotate(360deg);\r\n        }\r\n      }\r\n    }\r\n\r\n    #payment-message {\r\n      color: rgb(105, 115, 134);\r\n      font-size: 16px;\r\n      line-height: 20px;\r\n      padding-top: 12px;\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    form {\r\n      width: 80vw;\r\n      min-width: initial;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getPaymentInfo } from \"../../features/order/orderSlice\";\r\nimport axios from \"axios\";\r\n\r\n// Make sure to call loadStripe outside of a component’s render to avoid\r\n// recreating the Stripe object on every render.\r\n// This is your test publishable API key.\r\n\r\nconst StripePayment = () => {\r\n  const [stripePromise, setStripePromise] = useState(null);\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n\r\n  const paymentInfo = useSelector(getPaymentInfo);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/v1/stripeappikey\").then((res) => {\r\n      setStripePromise(loadStripe(res.data.stripeApiKey));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Create PaymentIntent as soon as the page loads\r\n    axios\r\n      .post(`/api/v1/create-payment-intent`, {\r\n        amount: paymentInfo.totalPayAmount * 100,\r\n      })\r\n\r\n      .then((res) => res.data)\r\n      .then((data) => setClientSecret(data.client_secret));\r\n  }, [paymentInfo.totalPayAmount]);\r\n\r\n  const appearance = {\r\n    theme: \"stripe\",\r\n  };\r\n  const options = {\r\n    clientSecret,\r\n    appearance,\r\n  };\r\n\r\n  return (\r\n    <StripeContainer>\r\n      {stripePromise && clientSecret && (\r\n        <Elements options={options} stripe={stripePromise}>\r\n          <CheckoutForm clientSecret={clientSecret} />\r\n        </Elements>\r\n      )}\r\n    </StripeContainer>\r\n  );\r\n};\r\n\r\nexport default StripePayment;\r\n\r\nconst StripeContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  addOrderItem,\r\n  getAllOrders,\r\n  getShippingInformation,\r\n  removeOrderItem,\r\n  shippingInformation,\r\n} from \"../../features/order/orderSlice\";\r\nimport ShippingInfo from \"./ShippingInfo\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport DefaultShippingAddress from \"./DefaultShippingAddress\";\r\nimport StripePayment from \"./StripePayment\";\r\nimport { addCartItem } from \"../../features/user/userSlice\";\r\n\r\nconst OrderDetails = () => {\r\n  const [isShipping, setIsShipping] = useState(false);\r\n  const [isPayment, setIsPayment] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const shippingInf = JSON.parse(localStorage.getItem(\"shippingInfo\"));\r\n    dispatch(shippingInformation({ shippingInfo: shippingInf }));\r\n  }, [dispatch]);\r\n\r\n  const { authenticated } = useSelector((state) => state.user);\r\n\r\n  const orderdItem = useSelector(getAllOrders);\r\n  const shippingInfo = useSelector(getShippingInformation);\r\n  // console.log(orderdItem);\r\n\r\n  const productDecrement = (item) => {\r\n    dispatch(\r\n      addCartItem({ product: item.product, quantity: item.quantity - 1 })\r\n    );\r\n\r\n    orderdItem &&\r\n      orderdItem.map((check) => {\r\n        if (check.product._id === item.product._id) {\r\n          let Item = { product: item.product, quantity: item.quantity - 1 };\r\n          dispatch(addOrderItem({ Item }));\r\n        }\r\n        return null;\r\n      });\r\n  };\r\n\r\n  const productIncrement = (item) => {\r\n    dispatch(\r\n      addCartItem({ product: item.product, quantity: item.quantity + 1 })\r\n    );\r\n\r\n    orderdItem &&\r\n      orderdItem.map((check) => {\r\n        if (check.product._id === item.product._id) {\r\n          let Item = { product: item.product, quantity: item.quantity + 1 };\r\n          dispatch(addOrderItem({ Item }));\r\n        }\r\n        return null;\r\n      });\r\n  };\r\n  const deleteProduct = (Item) => {\r\n    dispatch(removeOrderItem({ Item }));\r\n  };\r\n\r\n  const paymentHandler = () => {\r\n    if (!authenticated) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      shippingInfo && orderdItem.length !== 0 && setIsPayment(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wraper>\r\n        <ShippingContainer>\r\n          <h4>Shipping Information</h4>\r\n          <p onClick={() => setIsShipping(!isShipping)}>+ Add new address</p>\r\n\r\n          {isShipping ? (\r\n            <ShippingInfo setIsShipping={setIsShipping} />\r\n          ) : (\r\n            <DefaultShippingAddress />\r\n          )}\r\n        </ShippingContainer>\r\n      </Wraper>\r\n\r\n      <Wraper>\r\n        <PaymentContainer>\r\n          <h4>Choose a Payment Methods</h4>\r\n          <img\r\n            style={isPayment ? { border: \"2px solid red\" } : {}}\r\n            src=\"./images/payment/stripe.png\"\r\n            alt=\"Stripe\"\r\n            onClick={paymentHandler}\r\n          />\r\n        </PaymentContainer>\r\n        {isPayment && authenticated === true && <StripePayment />}\r\n      </Wraper>\r\n\r\n      <Wraper>\r\n        <CartTitle>\r\n          <h2>Order Review({orderdItem.length})</h2>\r\n        </CartTitle>\r\n\r\n        {orderdItem &&\r\n          orderdItem.map((Item) => {\r\n            return (\r\n              <CartProducts key={Item.product._id}>\r\n                <div className=\"left_box\">\r\n                  <div className=\"img_box\">\r\n                    <img src={Item.product.images[0].url} alt=\"\" />\r\n                  </div>\r\n\r\n                  <div className=\"dtails_box\">\r\n                    <div className=\"title\">\r\n                      <Link to={`/products/${Item.product._id}`}>\r\n                        {Item.product.name}\r\n                      </Link>\r\n                    </div>\r\n\r\n                    <div className=\"price\">\r\n                      <span>BDT ৳{Item.product.price}</span>\r\n                    </div>\r\n                    <div className=\"shiping\">\r\n                      <span>Quantity: {Item.quantity}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {!isPayment && (\r\n                  <div className=\"cart_controller\">\r\n                    <div className=\"quantity\">\r\n                      <div className=\"set_quantity\">\r\n                        <button>\r\n                          <i\r\n                            className=\"bi bi-dash\"\r\n                            onClick={() =>\r\n                              Item.quantity > 1 && productDecrement(Item)\r\n                            }\r\n                          ></i>\r\n                        </button>\r\n                        <p>{Item.quantity}</p>\r\n                        <button>\r\n                          <i\r\n                            className=\"bi bi-plus\"\r\n                            onClick={() =>\r\n                              Item.quantity < 10 && productIncrement(Item)\r\n                            }\r\n                          ></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"notify\">\r\n                      {Item.quantity === 10 && <span>Maximum 10 Products</span>}\r\n                    </div>\r\n\r\n                    <div className=\"subtotal\">\r\n                      <p>৳ {Item.product.price * Item.quantity} </p>\r\n                    </div>\r\n\r\n                    <div className=\"remove_order_item\">\r\n                      <IconButton\r\n                        onClick={() => deleteProduct(Item)}\r\n                        aria-label=\"delete\"\r\n                        size=\"large\"\r\n                        color=\"error\"\r\n                      >\r\n                        <DeleteForeverIcon fontSize=\"large\" />\r\n                      </IconButton>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </CartProducts>\r\n            );\r\n          })}\r\n\r\n        {orderdItem.length === 0 && (\r\n          <EmptyProductContainer>\r\n            <p>No products in your order List.</p>\r\n            <Link to={\"/cart\"}> Add Items </Link>\r\n          </EmptyProductContainer>\r\n        )}\r\n      </Wraper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n\r\nconst Container = styled.div`\r\n  width: 75%;\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nconst Wraper = styled.div`\r\n  background: #fff;\r\n  padding: 1rem 2rem;\r\n  margin: 1rem 1rem 1rem 0;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nconst ShippingContainer = styled.div`\r\n  h4 {\r\n    font-size: 1.8rem;\r\n    font-weight: 600;\r\n  }\r\n  p {\r\n    font-size: 1.4rem;\r\n    color: tomato;\r\n    cursor: pointer;\r\n    user-select: none;\r\n  }\r\n`;\r\nconst PaymentContainer = styled.div`\r\n  margin-bottom: 2rem;\r\n  h4 {\r\n    font-size: 1.8rem;\r\n    font-weight: 600;\r\n  }\r\n  img {\r\n    width: 20rem;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n\r\nconst CartTitle = styled.div`\r\n  h2 {\r\n    font-size: 1.8rem;\r\n    font-weight: 600;\r\n  }\r\n`;\r\nconst CartProducts = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 1rem 0;\r\n  border-bottom: 1px solid #f2f2f2;\r\n\r\n  .left_box {\r\n    display: flex;\r\n    .img_box {\r\n      padding: 0 1rem;\r\n      img {\r\n        width: 12rem;\r\n        height: 12rem;\r\n      }\r\n    }\r\n    .dtails_box {\r\n      .title {\r\n        a {\r\n          font-size: 1.4rem;\r\n        }\r\n      }\r\n      .price {\r\n        margin: 1rem 0;\r\n        span {\r\n          font-weight: 600;\r\n          font-size: 1.6rem;\r\n        }\r\n      }\r\n      .shiping {\r\n        span {\r\n          margin-right: 5px;\r\n          color: #2e9cc3;\r\n          font-weight: 500;\r\n          line-height: 18px;\r\n          font-size: 12px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .cart_controller {\r\n    /* background: red; */\r\n    width: 12rem;\r\n\r\n    .remove_order_item {\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n\r\n    .quantity {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      margin: 0 1rem;\r\n      p {\r\n        font-family: \"Roboto\", \"san-serif\";\r\n        color: #757575;\r\n        word-wrap: break-word;\r\n        font-size: 1.4rem;\r\n        font-weight: 400;\r\n      }\r\n      .set_quantity {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        button {\r\n          width: 2.5rem;\r\n          height: 2.5rem;\r\n          border-radius: 50%;\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          border: none;\r\n          cursor: pointer;\r\n          i {\r\n            font-size: 2rem;\r\n            color: #757575;\r\n          }\r\n        }\r\n        p {\r\n          padding: 0 1rem;\r\n          margin-bottom: 0;\r\n          color: #666;\r\n        }\r\n      }\r\n    }\r\n    .notify {\r\n      display: flex;\r\n      justify-content: center;\r\n      margin-top: 1rem;\r\n      span {\r\n        text-align: center;\r\n      }\r\n    }\r\n    .subtotal {\r\n      text-align: center;\r\n      p {\r\n        font-size: 1rem;\r\n        font-weight: 400;\r\n        color: #2e9cc3;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst EmptyProductContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  p {\r\n    font-size: 1.6rem;\r\n  }\r\n  a {\r\n    font-size: 1.4rem;\r\n    background-color: #fff;\r\n    color: tomato;\r\n    border: 1px solid tomato;\r\n    border-radius: 2rem;\r\n    padding: 0.5rem 1rem;\r\n    transition: all 0.5s;\r\n\r\n    &:hover {\r\n      color: #000;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport PageContainer from \"../utils/PageContainer\";\r\nimport OrderSummary from './OrderSummary';\r\nimport OrderDetails from './OrderDetails';\r\n\r\n\r\n\r\n\r\nconst Cart = () => {\r\n\r\n\r\n\r\n  return (\r\n    <PageContainer>\r\n\r\n   <OrderContainer>\r\n  <OrderDetails/>\r\n  <OrderSummary />\r\n  </OrderContainer>\r\n  \r\n    </PageContainer>\r\n  )\r\n};\r\n\r\nexport default Cart;\r\n\r\n\r\n\r\nconst OrderContainer = styled.div`\r\nwidth: 100%;\r\nmax-width: 1440px;\r\nbackground: transparent;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nmargin: 1rem 0;\r\n/* position: relative; */\r\n\r\n@media screen and (max-width: 1440px) {\r\n  padding: 0 1rem;\r\n}\r\n@media screen and (max-width: 768px) {\r\n  flex-direction: column;\r\n}\r\n`\r\n"],"names":["useState","productPrice","setProductPrice","shippingCost","setShippingCost","tax","setTax","total","setTotal","dispatch","useDispatch","orderdItems","useSelector","getAllOrders","useEffect","calcProductPrice","reduce","acc","item","product","price","quantity","calcShippingCost","Math","round","rate","calcTax","paymentInfo","products_price","shipping_cost","totalPayAmount","Container","className","styled","setIsShipping","countryCode","setCountryCode","stateCode","setStateCode","shippingMsg","setShippingMsg","address","city","state","country","postCode","phoneNo","shippingData","setShippingData","prev","shippingDataHandler","e","preventDefault","name","target","value","ShippingContainer","MainContainer","Title","onClick","Form","Home","fontSize","type","required","onChange","placeholder","LocalPhone","AddLocationAlt","Public","Country","console","log","map","isoCode","TransferWithinAStation","State","LocationCity","City","localStorage","setItem","JSON","stringify","shippingInformation","shippingInfo","parse","getItem","DefaultShippingContainer","MainContent","CheckoutForm","clientSecret","stripe","useStripe","elements","useElements","navigate","useNavigate","message","setMessage","isLoading","setIsLoading","getShippingInformation","orderdItem","getPaymentInfo","createNewOrder","paymentIntent","orderItems","push","productId","_id","image","images","url","newOrder","id","status","itemsPrice","taxPrice","shippingPrice","totalPrice","axios","then","res","toast","setTimeout","catch","err","handleSubmit","confirmPayment","confirmParams","redirect","error","retrievePaymentIntent","CheckoutFormContainer","onSubmit","PaymentElement","disabled","stripePromise","setStripePromise","setClientSecret","loadStripe","data","stripeApiKey","amount","client_secret","options","appearance","theme","StripeContainer","Elements","isShipping","isPayment","setIsPayment","shippingInf","authenticated","user","Wraper","PaymentContainer","style","border","src","alt","length","CartTitle","Item","CartProducts","to","addCartItem","check","addOrderItem","IconButton","removeOrderItem","deleteProduct","size","color","DeleteForever","EmptyProductContainer","PageContainer","OrderContainer"],"sourceRoot":""}